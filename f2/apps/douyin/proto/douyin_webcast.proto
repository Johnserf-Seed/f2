syntax = "proto3";

package douyin;


message Response {
  repeated Message messages = 1;
  string cursor = 2;
  int64 fetch_interval = 3;
  int64 now = 4;
  string internal_ext = 5;
  int32 fetch_type = 6;
  map<string, string> routeParams = 7;
  int64 heartbeat_duration = 8;
  bool need_ack = 9;
  string push_server = 10;
  string live_cursor = 11;
  bool history_no_more = 12;
  string proxy_server = 13;
}

message Message{
  string method = 1;
  bytes payload = 2;
  int64 msg_id = 3;
  int32 msg_type = 4;
  int64 offset = 5;
  bool need_wrds_store = 6;
  int64 wrds_version = 7;
  string wrds_sub_key = 8;
}

// ok
message ChatMessage {
    Common common = 1;
    User user = 2;
    string content = 3;
    bool visible_to_sender = 4;
    Image background_image = 5;
    string full_screen_text_color = 6;
    Image background_image_v2 = 7;
    PublicAreaCommon public_area_common = 9;
    Image gift_image = 10;
    int64 agree_msg_id = 11;
    int32 priority_level = 12;
    LandscapeAreaCommon landscape_area_common = 13;
    int64 event_time = 15;
    bool send_review = 16;
    bool from_intercom = 17;
    bool intercom_hide_user_card = 18;
    repeated int32 chat_tags = 19;
    int64 chat_by = 20;
    int32 individual_chat_priority = 21;
    Text rtf_content = 40;
    Text rtf_content_v2 = 41;
}

message LandscapeAreaCommon {
    bool show_head = 1;
    bool show_nickname = 2;
    bool show_font_color = 3;
    repeated string color_value = 4;
    repeated int32 comment_type_tags = 5;
}

// ok
message RoomUserSeqMessage {
  Common common = 1;
  repeated Contributor ranks = 2;
  int64 total = 3;
  string pop_str = 4;
  repeated Contributor seats = 5;
  int64 popularity = 6;
  int64 total_user = 7;
  string total_user_str = 8;
  string total_str = 9;
  string online_user_for_anchor = 10;
  string total_pv_for_anchor = 11;
  string up_right_stats_str = 12;
  string up_right_stats_str_complete = 13;

  message Contributor {
    int64 score = 1;
    User user = 2;
    int64 rank  = 3;
    int64 delta  = 4;
    bool is_hidden = 5;
    string score_description = 6;
    string exactly_score = 7;
  }
}

// ok
message RoomMessage{
  Common common = 1;
  string content = 2;
  bool support_landscape = 3;
  int32 roomMessageType = 4;
  bool system_top_msg = 5;
  bool forced_guarantee = 6;
  PublicAreaCommon public_area_common = 7;
  string biz_scene = 20;
}

// ok
message CommonTextMessage {
  Common common = 1;
  User user = 2;
  string scene = 3;
  PublicAreaCommon public_area_common = 4;
}

// ok
message UpdateFanTicketMessage {
  Common common = 1;
  string room_fan_ticket_count_text = 2;
  int64 room_fan_ticket_count = 3;
  bool forceUpdate = 4;
}

// ok
message RoomStatsMessage {
    Common common = 1;
    string display_short = 2;
    string display_middle = 3;
    string display_long = 4;
    int64 display_value = 5;
    int64 display_version = 6;
    bool incremental = 7;
    bool is_hidden = 8;
    int64 total = 9;
    int64 display_type = 10;
}

// ok
message RoomRankMessage {
    Common common = 1;
    repeated RoomRank ranks = 2;

    message RoomRank {
        User user = 1;
        string score_str = 2;
        bool profile_hidden = 3;
    }
}

// OK
message RanklistHourEntranceMessage {
    Common common = 1;
    RanklistHourEntrance info = 2;

    message RanklistHourEntrance {
      repeated Info global_infos = 1;
      repeated Info default_global_infos = 2;
      repeated Info vertical_infos = 3;
      repeated Info default_vertical_infos = 4;

      message Info {
          repeated Detail details = 1;
      }

      message Detail {
          repeated Page pages = 1;
          int32 ranklist_type = 2;
          string title = 3;
          string ranklist_extra = 4;
          string entrance_extra = 5;
          string schema = 6;
      }

      message Page {
          string content = 1;
          string background_color = 2;
          int64 show_times = 3;
          int32 content_type = 4;
      }
  }
}

message InRoomBannerMessage {
  Common common = 1;
  string extra = 2;
  int32 position = 3;
  int32 action_type = 4;
  string container_url = 5;
  string lynx_container_url = 6;
  int32 container_type = 7;
  int32 op_type = 8;
}

// ok
message LiveShoppingMessage {
    Common common = 1;
    int32 msg_type = 2;
    int64 promotion_id = 3;
    int64 target_uid = 4;
    int32 bubble_type = 5;
    int64 screenshot_timestamp = 6;
    string sec_target_uid = 7;
    string ecom_notice = 8;
    repeated int64 updated_product_ids = 9;
    int32 update_type = 10;
    UpdatedProductInfo updated_product_info = 11;
    bool sold_out = 12;
    UpdatedCouponInfo updated_coupon_info = 13;
    UpdatedCampaignInfo updated_campaign_info = 14;
    int64 update_timestamp = 15;
    string button_label = 16;
    int64 promotions_num = 17;
    UpdatedSkuInfo update_sku_info = 18;
    UpdatedCommentaryVideoInfo updated_commentary_video_info = 19;
    UpdatedGroupInfo updated_group_info = 20;
    string commerce_authority_change_toast = 21;
    TraceTimeMetric trace_time_metric = 22;
    AuctionSuccess auction_success = 23;
    AuctionInfo auction_info = 24;
    RedpackActivityInfo redpack_activity_info = 25;
    UpdatedCartInfo updated_cart_info = 26;
    LotteryInfo lottery_info = 27;
    WinLotteryInfo win_lotteryinfo = 28;
    LotteryInfoList lottery_info_list = 29;
    HotAtmosphere hot_atmosphere = 30;
    string update_toast = 31;
    bool can_sold = 32;
    int64 logical_clock = 33;
    RoomTagOfflineInfo room_tag_offline_info = 34;
    FilterSwitchChangeData filter_switch_change_data = 35;
    InteractionData interaction_data = 36;

    message UpdatedProductInfo {
        int64 price = 1;
        string title = 2;
        string cover = 3;
        int64 status = 4;
        string pop_upicon = 5;
    }

    message UpdatedCouponInfo {
        string tag = 1;
        string coupon_url = 2;
        string coupon_applet = 3;
        bool is_valid = 4;
        string coupon_meta_id = 5;
    }

    message UpdatedCampaignInfo {
        bool is_valid = 1;
        string label = 2;
        string price = 3;
        string pic = 4;
        string start_time = 5;
        string end_time = 6;
        string time_start_label = 7;
        string time_end_label = 8;
        string user_limit = 9;
        string is_preheat = 10;
        string campaign_id = 11;
    }

    message UpdatedSkuInfo {
        int64 min_price = 2;
        int64 max_price = 3;
        int64 unuse_min_price = 4;
        int64 coupon_price = 5;
    }

    message UpdatedCommentaryVideoInfo {
        int64 action = 1;
    }

    message UpdatedGroupInfo {
        repeated string avatar_list = 1;
        int64 joined = 2;
        int64 group_size = 3;
        int64 persent = 4;
    }

    message TraceTimeMetric {
        int64 op_timestamp = 1;
        int64 producer_duration = 2;
        int64 consumer_duration = 3;
        int64 msg_send_timestamp = 4;
    }

    message AuctionSuccess {
        string title = 1;
        int64 product_id = 2;
        string product_name = 3;
        string product_pic = 4;
        int64 price = 5;
        int64 charge = 6;
        int64 freight = 7;
        int64 total = 8;
        string button_label = 9;
        string jump_url = 10;
        string freight_collect = 11;
        int64 left_payment_time = 12;
        int32 biz_id = 13;
        string deposit_info = 14;
    }

    message AuctionInfo {
        int64 price = 1;
        string price_label = 2;
        int32 status = 3;
        string jump_url = 4;
        CurrentUserInfo current_user_info = 5;
        repeated IncrPriceList incr_price_lists = 6;
        string button_label = 7;
        int64 product_id = 8;
        int64 end_time = 9;
        int32 biz_id = 10;
    }

    message RedpackActivityInfo {
        int64 redpack_type = 1;
        string redpack_activity_id = 2;
        string redpack_activity_name = 3;
        int64 start_apply_time = 4;
        int64 end_apply_time = 5;
        int64 preheat_time = 6;
        int64 total_amount = 7;
        string author_avatar_url = 8;
        string author_name = 9;
        string pendant_background_url = 10;
        string redpack_front_background_url = 11;
        string redpack_label = 12;
        string redpack_after_background_url = 13;
        string redpack_after_belt_url = 14;
        int64 scatter_time = 15;
        int64 server_time = 16;
        int64 max_amount = 17;
        int64 show_type = 18;
        string shorttouch_pendant_background_url = 19;
        string shorttouch_pendant_icon_url = 20;
        string shorttouch_lottie_url = 21;
    }

    message UpdatedCartInfo {
        CartVertical vertical = 1;
        CartHorizontal horizontal = 2;
        GlobalCustomIcons global_custom_icons = 3;
    }

    message WinLotteryInfo {
        string title = 1;
        string name = 2;
        string img = 3;
        string button_label = 4;
        string win_record_id = 5;
        string activity_id = 6;
        bool is_addressed = 7;
        WinLotteryAlert alert = 8;
        bool is_win = 9;
        string jump_url = 10;
        int64 product_id = 11;
        int64 activity_price = 12;
        int64 buy_time = 13;
        int64 lottery_type = 14;
        string product_id_str = 15;
        LotteryInfoList lottery_info_list = 16;
    }

    message HotAtmosphere {
        string img = 1;
        string sale_num = 2;
        int64 type = 3;
        string num = 4;
        string bg_color = 5;
        string border_color = 6;
        int64 left_margin = 7;
        int64 ui_type = 8;
        repeated string bg_colors = 9;
        repeated string border_colors = 10;
        string top_img = 11;
    }

    message CurrentUserInfo {
        Img user_pic = 1;
        string user_name = 2;
        int64 user_id = 3;

        message Img {
          string url_list = 1;
          int32 height = 2;
          int32 width = 3;
        }
    }

    message IncrPriceList {
        int64 price = 1;
        int64 range = 2;
    }

    message CartVertical {
        bool allow_show_cart = 1;
    }

    message CartHorizontal {
        bool allow_show_cart = 1;
    }

    message GlobalCustomIcons {
        string static_icon_url = 1;
        string animated_icon_url = 2;
        string animated_common_icon_url = 3;
    }

    message LotteryInfo {
        int64 lottery_type = 1;
        string enter_icon = 2;
        string icon = 3;
        string activity_id = 4;
        int64 open_time = 5;
        LotteryProductShortInfo product_info = 6;
    }

    message WinLotteryAlert {
        string title = 1;
        string content = 2;
        string button_label = 3;
    }

  message LotteryProductShortInfo {
      int64 product_id = 1;
      string img = 2;
  }

    message LotteryInfoList {
        string activity_id = 1;
        int64 task_type = 2;
        int64 open_time = 3;
        int64 user_activity_status = 4;
        string win_record_id = 5;
        string result_label = 6;
        string button_label = 7;
        repeated string text = 8;
        string jump_url = 9;
        int64 lottery_type = 10;
        string elastic_title = 11;
        BenefitLabel benefit_label = 12;
    }

    message RoomTagOfflineInfo {
        int64 tag_type = 1;
        string user_toast = 2;
    }

    message FilterSwitchChangeData {
        bool enable = 1;
        UpIcon up_icon = 2;
    }

    message InteractionData {
        bool full = 1;
        repeated InteractionContent contents = 2;
    }

    message BenefitLabel {
        string LeftText = 1;
        string RightText = 2;
        int32 TextStyle = 3;
        int32 ColorStyle = 4;
        int32 DivLine = 5;
    }

    message UpIcon {
        string name = 1;
        string up_icon = 2;
        string up_desc = 3;
        string public_screen_notice = 4;
    }

    message InteractionContent {
        InteractionContentCheck check = 1;
        int32 priority = 2;
        int32 loop_count = 3;
        repeated InteractionElement content = 4;
    }

    message InteractionContentCheck {
        int64 product_id = 1;
        int32 index = 2;
    }

    message InteractionElement {
        int32 element_type = 1;
        string text = 2;
        string text_color = 3;
        repeated InteractionAvatar avatars = 4;
        int32 blank_width = 5;
        int32 text_size = 6;
    }

    message InteractionAvatar {
        repeated string url_list = 1;
        int32 width = 2;
        int32 height = 3;
    }
}

// ok
message LinkMicMethod {
    message UserScores {
        int64 score = 1;
        int64 user_id = 2;
        int64 weekly_rank = 3;
        string score_relative_text = 4;
        bool is_large_pk_score = 5;
        bool room_like_trigger = 6;
        string score_blur_text = 7;
        int64 battle_rank = 8;
        bool new_score_open = 9;
        string multi_pk_team_score_text = 10;
        int64 multi_pk_team_score = 11;
        int64 multi_pk_team_rank = 12;
        bool is_multi_pk_relative_text = 13;
        string cur_add_score_text = 14;
        int64 buff_score_ratio = 15;
    }

    message InvitorInfo {
        string invitor_nick_name = 1;
        Image invitor_avatar = 2;
    }

    Common common = 1;
    int64 message_type = 2;
    string access_key = 3;
    int64 anchor_linkmic_id = 4;
    int64 user_id = 5;
    int64 fan_ticket = 6;
    int64 total_linkmic_fan_ticket = 7;
    int64 channel_id = 8;
    int64 layout = 9;
    int64 vendor = 10;
    int64 dimension = 11;
    string theme = 12;
    int64 invite_uid = 13;
    int64 answer = 14;
    int64 start_time = 15;
    int64 duration = 16;
    repeated UserScores user_scores = 17;
    int64 match_type = 18;
    bool win = 19;
    string prompts = 20;
    int64 to_user_id = 21;
    int64 linkmic_layout = 23;
    int64 from_user_id = 24;
    string tips = 25;
    int64 start_time_ms = 26;
    int32 confluence_type = 27;
    int64 from_room_id = 28;
    int64 invite_type = 29;
    int64 sub_type = 30;
    RivalExtraInfo inviter_rival_extra = 31;
    string rtc_ext_info = 32;
    string rtc_app_id = 33;
    string app_id = 34;
    string app_sign = 35;
    string rtc_app_sign = 36;
    string anchor_linkmic_id_str = 37;
    int64 rival_anchor_id = 38;
    int64 rival_linkmic_id = 39;
    string rival_linkmic_id_str = 40;
    bool show_popup = 41;
    int64 sec_invite_uid = 42;
    int64 scene = 43;
    int64 sec_apply_uid = 44;
    repeated User linked_users = 45;
    string sec_from_user_id = 46;
    int32 reply_type = 47;
    string reply_prompts = 48;
    string sec_to_user_id = 49;
    InvitorInfo invitor_info = 50;
    bool rtc_join_channel = 51;
    int32 sub_scene = 52;
    bool support_update_link_type = 53;
    int32 link_type = 54;
    int32 source = 55;
    AnchorLinkmicInfo backup_anchor_linkmic_info = 56;
    repeated int32 play_modes = 57;
    repeated ListUser linked_list_users = 58;
    repeated LinkmicPositionItem locked_positions = 59;
    int32 end_reason = 60;
    MultiRtcInfo multi_rtc_info = 61;
    MultiLiveCoreInfo multi_live_core_info = 62;
    int32 layout_config_version = 63;
    int32 control_type = 64;
    BanUser ban_anchor_info = 65;
    int64 version = 66;
    JoinTeamfightInfo join_teamfight_info = 67;
    int64 paid_count = 68;
    int64 link_duration = 69;
    string live_core_ext_info = 70;
    GameInviteInfo game_invite_info = 71;
    int32 ui_layout = 72;
    Text invite_message = 73;
    MultiChannelInfo multi_channel_info = 74;
    int32 kick_out_source = 75;
    string function_type = 77;
    MsgBoardItemInfo msg_board_item = 78;
    string from_user_linkmic_id_str = 79;
    string ack_message = 80;
    string init_source = 81;
    string score_update_log_id = 82;
    int32 switch_play_mode = 83;
    int32 update_message_from = 84;
    LinkmicMediaInfo guest_linkmic_info = 85;
    MCUContent mcu_content = 86;
    BreakthroughInfo breakthrough_info = 87;
    LinkerBaseInfo linker_base_info = 88;
    AudienceActionSource action_source = 89;
    BattleBarConfig battle_bar_config = 90;
    User from_user = 91;
    map<int64, AuxiliaryScoreInfo> auxiliary_score_infos = 92;
    string linker_session_id = 93;
    string remote_linker_session_id = 94;
    LinkGameInfo link_game_info = 95;
    Image invite_image = 96;
    string invite_prompt = 97;
    string open_id = 5000;
    string invite_open_id = 5001;
    string to_open_id = 5002;
    string from_open_id = 5003;
    string rival_anchor_open_id = 5004;
}

message LinkGameInfo {
  string game_app_id = 1;
  string game_extra = 2;
  string open_id = 3;
  string init_param = 4;
  string link_extra = 5;
  LinkMicBizExtra link_biz_extra = 6;
}

message LinkMicBizExtra {
  OpenGameConfig open_game_config = 1;
}

message OpenGameConfig {
  string app_id = 1;
  string app_extra = 2;
  Image icon_image = 3;
  string game_title = 4;
}

message AuxiliaryScoreInfo {
  string anchor_score = 1;
  Image auxiliary_img = 2;
  int64 index = 3;
  int64 gift_id = 4;
  int64 auxiliary_type = 5;
  int64 anchor_score_int = 6;
  bool no_need_update_score = 7;
}

message LinkmicPositionItem {
  int64 position = 1;
  int32 status = 2;
  string active_name = 3;
  int32 verify_status = 4;
  int32 position_type = 5;
  int64 client_ui_position = 6;
}

message BanUser {
  int64 user_id = 1;
  string reason = 2;
  string url = 3;
  string anchor_explain = 4;
  string audience_explain = 5;
}

message AnchorLinkmicInfo {
    string rtc_ext_info = 1;
    string linkmic_id_str = 2;
    bool use_backup_stream = 3;
}

message HostInfo {
  int64 is_host = 1;
  string host_position_name = 2;
}

message MicPosTagInfo {
    int32 tag_type = 1;
    string tag_name = 2;
    string text_color_value = 3;
    string bg_color_value = 4;
    int64 tag_type_id = 5;
    Image bg_color_img = 6;
    bool open_tag_desc_page = 7;
    string schema = 8;
}

message BreakthroughInfo {
  int64 stage = 1;
  int64 total_score = 2;
  int64 mvp_anchor_id = 3;
  int32 state = 4;
}

message BattleBarConfig {
  string left_color = 1;
  string right_color = 2;
  string left_score_view_color = 3;
  string right_score_view_color = 4;
  AnimeInfo anime_info = 5;
}

message AnimeInfo {
  int32 bar_type = 1;
  int32 aura_type = 2;
  string normal_bar_url = 3;
  string buff_bar_url = 4;
  string steal_tower_bar_url = 5;
  string cur_bar_url = 6;
  string cur_aura_url = 7;
}

message ListUserPKContent {

}

message ListUserLinkmicContent {
  int64 resource_id = 1;
  bool show_identity = 2;
  int32 pk_user_role = 3;
  string game_name = 4;
  string fan_ticket = 5;
  int64 join_channel_time = 6;
  // AnchorLinkmicIDInfo anchor_linkmic_id_info = 7;
  int32 anchor_auth_role = 8;
}

message ListUserLinkmicAudienceContent {
    int64 fan_ticket = 1;
    bool host_permission = 2;
    int64 app_id = 3;
    int64 client_version = 4;
    string device_platform = 5;
    int64 join_channel_time = 6;
    int64 expected_leave_time = 7;
    bool in_waiting_list = 8;
    string extra = 9;
    int64 current_time = 10;
    string fan_ticket_fuzzy_str = 11;
    int32 list_user_role = 12;
    string fan_ticket_real_str = 13;
    repeated int64 rank_contributor_ids = 14;
    MicDress mic_dress = 15;
    int64 paid_count = 16;
    bool is_enlarged = 17;
    int64 self_discipline_duration = 18;
    bool is_anonymous = 19;
    int32 apply_type = 20;
    int64 self_discipline_start_time_ms = 21;
    int64 self_discipline_start_time = 22;
    int64 self_discripline_target_duration = 23;
    string device_id_str = 24;
    int32 themed_competition_role = 25;
}

message MicDress {
    VoiceWave voice_dress = 1;
    VoiceWave voice_wave = 2;
    // LinkmicBadge badge = 3;
    LinkmicCustomizedRandomEmoji customized_random_emoji = 4;
}

message VoiceWave {
  string dress_id = 1;
  Image low_img = 2;
  Image medium_img = 3;
  Image high_img = 4;
}

message MCUContent {
  string current_stream_id = 1;
  string rivals_stream_id = 2;
}

message LinkerBaseInfo {
  int32 scene = 1;
  int64 play_modes = 2;
  int32 ui_layout = 3;
  int64 MaxMemberCount = 4;
}

message MultiChannelInfo {
  bool use_multi_channel = 1;
}

message AudienceActionSource {
  int32 invite_source = 1;
  int32 permit_source = 2;
}

// BattleUserSettings
message BattleUserSettings {
    bool is_turn_on = 1;
    bool accept_not_follower_invite = 2;
    bool allow_gift_to_other_anchors = 3;
    bool accept_friend_invite = 4;
    bool accept_hourly_rank_invite = 5;
    bool accept_popularity_rank_invite = 6;
    int64 invite_reject_permanent_total = 7;
    int64 invite_reject_temporary_total = 8;
    string invite_reject_temporary_text = 9;
    bool pk_accept_volume_up = 10;
    bool pk_auto_confirm = 11;
    bool accept_union_recommend_invite = 12;
}

// MultiLiveCoreInfo
message MultiLiveCoreInfo {
    int32 scene = 1;
    VideoEqualRoomLiveCoreInfo video_equal_room_live_core_info = 2;
    KTVLiveCoreInfo ktv_live_core_info = 3;
    MultiAnchorLinkmicLiveCoreInfo multi_anchor_linkmic_live_core_info = 4;
    SingingChallengeLiveCoreInfo singing_challenge_live_core_info = 5;
    VideoDUOBattleLiveCoreInfo video_duo_battle_live_core_info = 6;
    VideoPositionLiveCoreInfo video_position_live_core_info = 7;
}

message JoinTeamfightInfo {
  int64 team_id = 1;
  string team_id_str = 2;
}

message GameInviteInfo {
  int32 invite_source = 1;
}

message BattleTeamTaskMessage {
  Common common = 1;
  TeamTask team_task = 2;
  string team_task_json = 3;
}

message TeamTask {
  Config config = 1;
  string battle_id = 2;
  string trigger_user_id = 3;
  int32 battle_type = 4;

  message Config {
    map<int64, PeriodConfig> period_config = 1;
    int64 reward_buff_multiple = 2;
    int32 task_type = 3;
    ExtraConfig extra_config = 4;
    int32 target_type = 5;
    int32 reward_type = 6;
    int32 team_work_team_task_type = 7;
    repeated int64 stage_reward_buff_multiple = 8;
  }

  message PeriodConfig {
    int64 begin_second_relative_battle_finish = 1;
    int64 end_second_relative_battle_finish = 2;
  }

  message ExtraConfig {
    SpecialGiftCountConfig special_gift_count_config = 5;
  }

  message SpecialGiftCountConfig {
    int64 gift_id = 1;
    string gift_name = 2;
    Image icon = 3;
    int64 max_gift_count_per_user = 4;
    int64 current_gift_count = 5;
  }
}




// 
message LinkMessage {
  Common common = 1;
  int64 message_type = 2;
  int64 linker_id = 3;
  int64 scene = 4;
  LinkerInviteContent invite_content = 5;
  LinkerReplyContent reply_content = 6;
  LinkerCreateContent create_content = 7;
  LinkerCloseContent close_content = 8;
  LinkerEnterContent enter_content = 9;
  LinkerLeaveContent leave_content = 10;
  LinkerCancelContent cancel_content = 11;
  LinkerKickOutContent kick_out_content = 12;
  LinkerLinkedListChangeContent linked_list_change_content = 13;
  LinkerUpdateUserContent update_user_content = 14;
  LinkerWaitingListChangeContent waiting_list_change_content = 15;
  LinkerBanContent ban_content = 16;
  LinkerItemContent item_content = 17;
  LinkerViolationReminderContent violation_reminder_content = 18;
  LinkerUpdateLinkTypeApplyContent update_link_type_apply_content = 19;
  LinkerUpdateLinkTypeReplyContent update_link_type_reply_content = 20;
  LinkerAvatarAuditContent avatar_audit_content = 21;
  LinkerApplyExpiredContent apply_expired_content = 22;
  LinkerApplyStrongReminderContent apply_strong_reminder_content = 23;
  LinkerAnchorStreamSwitchContent anchor_stream_switch_content = 24;
  LinkerClickScreenContent click_screen_content = 25;
  LinkerLockPositionContent lock_position_content = 26;
  LinkerFollowStrongGuideContent follow_strong_guide_content = 27;
  LinkerShareVideoImContent share_video_im_content = 28;
  LinkerGuestInviteContent guest_invite_content = 29;
  LinkerGuestExitCastScreenContent exit_cast_screen_content = 30;
  LinkerSwitchSceneContent switch_scene_content = 31;
  LinkPhaseEnterNextNotifyContent link_phase_enter_next_content = 32;
  LinkerChangePlayModeContent change_play_mode_content = 33;
  LinkerLowBalanceForPaidLinkmicContent low_balance_for_paid_linkmic_content = 34;
  LinkerDegradeAlertContent degrade_alert_content = 35;
  LinkerEnlargeGuestInviteContent enlarge_guest_invite_content = 36;
  LinkerEnlargeGuestReplyContent enlarge_guest_reply_content = 37;
  LinkerEnlargeGuestApplyContent enlarge_guest_apply_content = 38;
  LinkPrepareApplyContent prepare_apply_content = 39;
  LinkerCrossRoomUpdateContent cross_room_update_content = 40;
  LinkerChangeMultiPKTeamInfoContent change_multi_pk_team_info_content = 41;
  CrossRoomLinkInviteContent cross_room_link_invite_content = 42;
  CrossRoomLinkReplyContent cross_room_link_reply_content = 43;
  CrossRoomLinkCancelInviteContent cross_room_link_cancel_invite_content = 44;
  LinkerResumeAudienceContent linker_resume_audience_content = 45;
  LinkerBattleConnectContent linker_battle_connect_content = 46;
  LinkerResumeApplyContent linker_resume_apply_content = 47;
  CrossRoomRTCInfoContent cross_room_rtc_info_content = 48;
  AnchorUpdateLinkmicConfigContent anchor_update_linkmic_config_content = 49;
  AnchorUpdateLayoutContent anchor_update_layout_content = 50;
  LinkerApplyRankChangeContent apply_rank_change_content = 52;
  LinkerChangeMediaInfoContent change_media_content = 53;
  LinkerUILayoutChangeContent linker_ui_layout_change_content = 54;
  LinkerUpdateWaitingUserOffsetContent linker_update_waiting_user_offset_content = 55;
  LinkerRemoveWaitingUserContent linker_remove_waiting_user_content = 56;
  LinkerPrepareInviteContent linker_prepare_invite_content = 57;
  LinkerPrepareReplyContent linker_prepare_reply_content = 58;
  LinkerConfirmUnsilenceContent linker_confirm_unsilence_content = 59;
  LinkerSwitchChannelInviteContent switch_channel_invite_content = 60;
  LinkerSwitchChannelReplyContent switch_channel_reply_content = 61;
  LinkerSwitchChannelCancelContent switch_channel_cancel_content = 62;
  LinkerSysKickOutContent sys_kick_out_content = 101;
  int64 fallback_scene = 199;
  string extra = 200;
  LinkerBaseInfo linker_base_info = 201;
  PublicAreaCommon public_area_common = 202;
}

message LinkerInviteContent {
  // 定义LinkerInviteContent字段
}

message LinkerReplyContent {
  // 定义LinkerReplyContent字段
}

message LinkerCreateContent {
  // 定义LinkerCreateContent字段
}

message LinkerCloseContent {
  // 定义LinkerCloseContent字段
}

message LinkerEnterContent {
  // 定义LinkerEnterContent字段
}

message LinkerLeaveContent {
  // 定义LinkerLeaveContent字段
}

message LinkerCancelContent {
  // 定义LinkerCancelContent字段
}

message LinkerKickOutContent {
  // 定义LinkerKickOutContent字段
}

message LinkerLinkedListChangeContent {
  // 定义LinkerLinkedListChangeContent字段
}

message LinkerUpdateUserContent {
  // 定义LinkerUpdateUserContent字段
}

message LinkerWaitingListChangeContent {
  // 定义LinkerWaitingListChangeContent字段
}

message LinkerBanContent {
  // 定义LinkerBanContent字段
}

message LinkerItemContent {
  // 定义LinkerItemContent字段
}

message LinkerViolationReminderContent {
  // 定义LinkerViolationReminderContent字段
}

message LinkerUpdateLinkTypeApplyContent {
  // 定义LinkerUpdateLinkTypeApplyContent字段
}

message LinkerUpdateLinkTypeReplyContent {
  // 定义LinkerUpdateLinkTypeReplyContent字段
}

message LinkerAvatarAuditContent {
  // 定义LinkerAvatarAuditContent字段
}

message LinkerApplyExpiredContent {
  // 定义LinkerApplyExpiredContent字段
}

message LinkerApplyStrongReminderContent {
  // 定义LinkerApplyStrongReminderContent字段
}

message LinkerAnchorStreamSwitchContent {
  // 定义LinkerAnchorStreamSwitchContent字段
}

message LinkerClickScreenContent {
  // 定义LinkerClickScreenContent字段
}

message LinkerLockPositionContent {
  // 定义LinkerLockPositionContent字段
}

message LinkerFollowStrongGuideContent {
  // 定义LinkerFollowStrongGuideContent字段
}

message LinkerShareVideoImContent {
  // 定义LinkerShareVideoImContent字段
}

message LinkerGuestInviteContent {
  // 定义LinkerGuestInviteContent字段
}

message LinkerGuestExitCastScreenContent {
  // 定义LinkerGuestExitCastScreenContent字段
}

message LinkerSwitchSceneContent {
  // 定义LinkerSwitchSceneContent字段
}

message LinkPhaseEnterNextNotifyContent {
  // 定义LinkPhaseEnterNextNotifyContent字段
}

message LinkerChangePlayModeContent {
  // 定义LinkerChangePlayModeContent字段
}

message LinkerLowBalanceForPaidLinkmicContent {
  // 定义LinkerLowBalanceForPaidLinkmicContent字段
}

message LinkerDegradeAlertContent {
  // 定义LinkerDegradeAlertContent字段
}

message LinkerEnlargeGuestInviteContent {
  // 定义LinkerEnlargeGuestInviteContent字段
}

message LinkerEnlargeGuestReplyContent {
  // 定义LinkerEnlargeGuestReplyContent字段
}

message LinkerEnlargeGuestApplyContent {
  // 定义LinkerEnlargeGuestApplyContent字段
}

message LinkPrepareApplyContent {
  // 定义LinkPrepareApplyContent字段
}

message LinkerCrossRoomUpdateContent {
  // 定义LinkerCrossRoomUpdateContent字段
}

message LinkerChangeMultiPKTeamInfoContent {
  // 定义LinkerChangeMultiPKTeamInfoContent字段
}

message CrossRoomLinkInviteContent {
  // 定义CrossRoomLinkInviteContent字段
}

message CrossRoomLinkReplyContent {
  // 定义CrossRoomLinkReplyContent字段
}

message CrossRoomLinkCancelInviteContent {
  // 定义CrossRoomLinkCancelInviteContent字段
}

message LinkerResumeAudienceContent {
  // 定义LinkerResumeAudienceContent字段
}

message LinkerBattleConnectContent {
  // 定义LinkerBattleConnectContent字段
}

message LinkerResumeApplyContent {
  // 定义LinkerResumeApplyContent字段
}

message CrossRoomRTCInfoContent {
  // 定义CrossRoomRTCInfoContent字段
}

message AnchorUpdateLinkmicConfigContent {
  // 定义AnchorUpdateLinkmicConfigContent字段
}

message AnchorUpdateLayoutContent {
  // 定义AnchorUpdateLayoutContent字段
}

message LinkerApplyRankChangeContent {
  // 定义LinkerApplyRankChangeContent字段
}

message LinkerChangeMediaInfoContent {
  // 定义LinkerChangeMediaInfoContent字段
}

message LinkerUILayoutChangeContent {
  // 定义LinkerUILayoutChangeContent字段
}

message LinkerUpdateWaitingUserOffsetContent {
  // 定义LinkerUpdateWaitingUserOffsetContent字段
}

message LinkerRemoveWaitingUserContent {
  // 定义LinkerRemoveWaitingUserContent字段
}

message LinkerPrepareInviteContent {
  // 定义LinkerPrepareInviteContent字段
}

message LinkerPrepareReplyContent {
  // 定义LinkerPrepareReplyContent字段
}

message LinkerConfirmUnsilenceContent {
  // 定义LinkerConfirmUnsilenceContent字段
}

message LinkerSwitchChannelInviteContent {
  // 定义LinkerSwitchChannelInviteContent字段
}

message LinkerSwitchChannelReplyContent {
  // 定义LinkerSwitchChannelReplyContent字段
}

message LinkerSwitchChannelCancelContent {
  // 定义LinkerSwitchChannelCancelContent字段
}

message LinkerSysKickOutContent {
  // 定义LinkerSysKickOutContent字段
}


// MultiRtcInfo
message MultiRtcInfo {
    int32 scene = 1;
    VideoEqualRoomRtcInfo video_equal_room_rtc_info = 2;
    MultiAnchorLinkmicRtcInfo multi_anchor_linkmic_rtc_info = 3;
    SingingChallengeRtcInfo singing_challenge_rtc_info = 4;
    CrossRoomLinkmicRtcInfo cross_room_linkmic_rtc_info = 5;
    VideoDUOBattleRtcInfo video_duo_battle_rtc_info = 6;
    VideoPositionRtcInfo video_position_rtc_info = 7;
}

message VideoEqualRoomRtcInfo {
    // 添加相应的字段
}

message MultiAnchorLinkmicRtcInfo {
    // 添加相应的字段
}

message SingingChallengeRtcInfo {
    // 添加相应的字段
}

message CrossRoomLinkmicRtcInfo {
    // 添加相应的字段
}

message VideoDUOBattleRtcInfo {
    // 添加相应的字段
}

message VideoPositionRtcInfo {
    // 添加相应的字段
}

// LinkmicMediaInfo
message LinkmicMediaInfo {
    string rtc_ext_info = 1;
    string linkmic_id_str = 2;
    string live_core_ext_info = 3;
    MultiRtcInfo multi_rtc_info = 4;
    MultiLiveCoreInfo multi_live_core_info = 5;
}

message VideoEqualRoomLiveCoreInfo {
    // 添加相应的字段
}

message KTVLiveCoreInfo {
    // 添加相应的字段
}

message MultiAnchorLinkmicLiveCoreInfo {
    // 添加相应的字段
}

message SingingChallengeLiveCoreInfo {
    // 添加相应的字段
}

message VideoDUOBattleLiveCoreInfo {
    // 添加相应的字段
}

message VideoPositionLiveCoreInfo {
    // 添加相应的字段
}

// LinkmicCustomizedRandomEmoji
message LinkmicCustomizedRandomEmoji {
    int32 status = 1;
    int64 refresh_timestamp = 2;
    Image emoji_status_image = 3;
    Image emoji_displayd_dynamic_image = 4;
    int64 random_num = 5;
    int64 type = 6;
    string trigger_reason = 7;
}

// MsgBoardItemInfo
message MsgBoardItemInfo {
    int64 id = 1;
    string id_str = 2;
    User sender = 3;
    string content = 4;
    int32 process_status = 5;
    int64 gift_id = 6;
    int64 msg_disappear_time = 7;
}


message ListUser {
    message Content {
        ListUserPKContent pk_content = 1;
        ListUserLinkmicContent linkmic_content = 2;
        ListUserLinkmicAudienceContent linkmic_audience_content = 3;
    }

    User user = 1;
    int64 linkmic_id = 2;
    string linkmic_id_str = 3;
    int32 link_status = 4;
    int32 link_type = 5;
    int32 user_position = 6;
    int32 silence_status = 7;
    int64 modify_time = 8;
    int64 linker_id = 9;
    int32 role_type = 10;
    Content content = 11;
    int64 mc_status = 12;
    int64 is_background = 13;
    HostInfo host = 14;
    MicPosTagInfo mic_pos_tag_info = 15;
    bool pk_available = 16;
    string extra = 200;
}

message RivalExtraInfo {
    message UserInfo {
      int64 user_id = 1;
      string nick_name = 2;
      Image avatar_thumb = 3;
    }

    message LinkerInfo {
      UserInfo linked_users = 1;
    }

    message GameInfo {
      string game_text = 1;
      string game_name = 2;
    }

    string text = 1;
    int32 text_type = 2;
    string label = 3;
    int32 anchor_layer = 4;
    LinkerInfo linker_info = 5;
    // AnchorLinkmicUserSettings linkmic_user_settings = 6;
    BattleUserSettings battle_user_settings = 7;
    int64 video_show_score = 8;
    GameInfo game_info = 9;
    string sign_extra = 10;
    string recommend_info = 11;
    int32 from_server_invite_type = 12;
}

message FlexImageStruct {
    repeated string url_list = 1;
    string uri = 2;
    repeated int64 flex_setting = 3;
    repeated int64 text_setting = 4;
    int64 top_border_height = 5;
}

// ok
message ScreenChatMessage {
    message Effect {
        FlexImageStruct icon = 1;
        Image avatar_icon = 2;
        string background_color = 3;
    }

    message OfficialCommentConfig {
      bool official = 1;
    }

    Common common = 1;
    User user = 2;
    int64 screen_chat_type = 3;
    string content = 4;
    int64 priority = 5;
    Effect effect = 6;
    Image background_image = 7;
    Effect effect_v2 = 8;
    Image background_image_v2 = 9;
    PublicAreaCommon public_area_common = 10;
    OfficialCommentConfig official_comment_config = 11;
    int64 event_time = 12;
    bool send_review = 13;
    ChatIdentity chat_identity_info = 14;
    Text rtf_content = 30;
    bool public_area_does_not_display = 31;
    Text rtf_content_v2 = 32;
}

message ChatIdentity {
  int32 show_identity = 1;
  Image identity_label = 2;
}

// ok
message RoomDataSyncMessage {
  Common common = 1;
  int64 roomID = 2;
  string syncKey = 3;
  int64 version = 4;
  bytes payload = 5;
  string bizLogID = 6;
}

// ok
message EmojiChatMessage {
  Common common = 1;
  User user = 2;
  int64 emoji_id = 3;
  Text emoji_content = 4;
  string default_content = 5;
  Image background_image = 6;
  bool from_intercom = 7;
  bool intercom_hide_user_card = 8;
  PublicAreaCommon public_area_common = 9;
}

// ok
message LinkerContributeMessage {
  Common common = 1;
  int64 user_id = 2;
  int64 total_score = 3;
  UserContribute user_contribute_list = 4;
  int64 micro_time_stamp = 5;
  int64 scene = 6;
  string total_score_real_str = 7;
  string total_score_str = 8;
  LinkmicQuickInteract quick_interact = 9;
}

message UserContribute {
  int64 user_id = 1;
  int64 rank = 2;
  int64 score = 3;
  string nickname = 4;
  Image avatar_thumb = 5;
}

message LinkmicQuickInteract {
  User send_gift_user = 1;
  int64 thanks_carousel_duration = 2;
  string thanks_content = 3;
  int64 receive_gift_user_id = 4;
}

// ok
message ProfitInteractionScoreMessage {
    Common common = 1;
    int32 interaction_score_status = 3;
    int64 channel_id = 4;
    int64 start_time = 5;
    int32 interaction_score_action = 6;
    string extra = 7;
}

// ok
message LightGiftMessage {
    Common common = 1;
    int64 group_count = 2;
    int64 repeat_count = 3;
    int64 combo_count = 4;
    int64 to_user_id = 5;
    GiftIMPriority priority = 6;
    GiftInfo gift_info = 7;
    GiftLiteTrayInfo tray_info = 8;
    int64 send_type = 9;
    int64 count = 10;
    string diy_item_info = 11;
    int64 banned_display_effects = 12;
    GiftStruct gift_struct = 13;
}

message GiftInfo {
    int64 gift_id = 1;
    Image gift_icon = 2;
    int64 diamond_count = 3;
}

message GiftLiteTrayInfo {
    int64 duration_ms = 1;
}

// ok
message NotifyEffectMessage {
    Common common = 1;
    repeated Image icons = 2;
    Text text = 3;
    Background background = 4;
    DynamicConfig dynamic_config = 5;
    CombinedText text_v2 = 6;
    bool support_landscape = 7;
    SceneConfig scene_config = 10;

    message Background {
        Image background_image = 1;
        string background_color = 10;
        Image background_effect = 11;
    }

    message SceneConfig {
        string scene = 1;
        int64 priority = 2;
        bool need_aggregate = 3;
        int64 aggregate_num = 4;
        Text aggregate_text = 5;
        string sub_scene = 6;
        int64 max_wait_time = 7;
    }

    message CombinedText {
        repeated DisplayItem display_items = 1;
        SchemaInfo schema_info = 10;
        ComboInfo combo_info = 11;
    }

    message ComboInfo {
        int64 combo_seq = 1;
        int64 combo_order = 2;
    }

    message DynamicConfig {
        int32 stay_time = 1;
        int32 max_stay_time = 2;
        int32 display_effect_type = 3;
    }

    message DisplayItem {
        int32 display_item_type = 1;
        bool combo_fresh = 20;
        SchemaInfo schema_info = 21;
        ImagesItem images_item = 50;
        TextItem text_item = 51;
        DisplayItemFormat format = 100;

        message SchemaInfo {
          string schema_url = 1;
        }

        message TextItem {
          Text text = 1;
        }

        message ImagesItem {
          Image images = 1;
          int32 display_style = 20;
        }

        message DisplayItemFormat {
          bool enable_left_space = 1;
          int64 left_space = 2;
      }
    }


}

message SchemaInfo {
  string schema_url = 1;
}

//ok
message ProductChangeMessage {
    Common common = 1;
    int64 update_timestamp = 2;
    string update_toast = 3;
    repeated ProductInfo update_product_info = 4;
    int64 total = 5;
    int64 target_uid = 6;
    string sec_target_uid = 7;
    repeated CategoryInfo update_category_info = 8;
}

message ProductInfo {
    int64 promotion_id = 1;
    int32 index = 2;
    repeated int64 target_flash_uids = 3;
    int64 explain_type = 4;
}

message CategoryInfo {
    int32 id = 1;
    string name = 2;
    repeated string promotion_ids = 3;
    string type = 4;
    string unique_index = 5;
}

// SUB ProductChangeMessage
message CategoryRefreshMessage {
    repeated CategoryInfo category_info = 1;
    int64 update_ts = 2;
    string update_toast = 3;
}

message ProductListRefreshMessage {
    int64 update_ts = 1;
    string update_toast = 2;
}

message ProductListUpdateMessage {
    int64 update_timestamp = 1;
    string update_toast = 2;
    repeated ProductInfo update_product_info = 3;
    int64 total = 4;
    repeated CategoryInfo update_category_info = 5;
    int32 msg_type = 6;
}


// ok
message LiveEcomGeneralMessage {
    Common common = 1;
    string content_type = 2;
    string content_format = 3;
    int64 logic_clock = 4;
    TraceTimeMetricV2 trace_time_metric = 5;
    bytes data = 6;
    int64 target_room_id = 50;

    message TraceTimeMetricV2 {
        int64 op_timestamp = 1;
        int64 producer_duration = 2;
        int64 consumer_duration = 3;
        int64 msg_send_timestamp = 4;
    }
}

// ok
message RoomStreamAdaptationMessage {
    Common common = 1;
    int32 adaptation_type = 2;
    float adaptation_height_ratio = 3;
    float adaptation_body_center_ratio = 4;
}

// ok
message DataLifeLiveMessage {
    Common common = 1;
    int32 type = 2;
    string body = 3;
}


// ok
message GiftMessage {
  Common common = 1;
  int64 gift_id = 2;
  int64 fan_ticket_count = 3;
  int64 group_count = 4;
  int64 repeat_count = 5;
  int64 combo_count = 6;
  User user = 7;
  User to_user = 8;
  int32 repeat_end = 9;
  TextEffect text_effect = 10;
  int64 group_id = 11;
  int64 income_taskgifts = 12;
  int64 room_fan_ticket_count = 13;
  GiftIMPriority priority = 14;
  GiftStruct gift = 15;
  string log_id = 16;
  int64 send_type = 17;
  PublicAreaCommon public_area_common = 18;
  Text tray_display_text = 19;
  int64 banned_display_effects = 20;
  GiftTrayInfo tray_info = 21;
  AssetEffectMixInfo asset_effect_mix_info = 22;
  bool display_for_self = 25;
  string interact_gift_info = 26;
  string diy_item_info = 27;
  repeated int64 min_asset_set = 28;
  int64 total_count = 29;
  int32 client_gift_source = 30;
  AnchorGiftData anchor_gift = 31;
  repeated int64 to_user_ids = 32;
  int64 send_time = 33;
  int64 force_display_effects = 34;
  string trace_id = 35;
  int64 effect_display_ts = 36;
  SendTogether send_together = 37;
  ExtraEffect extra_effect = 38;
  RoomHotInfo room_hot_info = 39;
  string GiftPlayParam = 40;
  int32 multi_send_effect_level = 41;
  SeriesPlayGift series_gift_data = 42;
}

message SendTogether {
  string id = 1;
  int64 start_time = 2;
  int64 end_time = 3;
}

message ExtraEffect {
  int64 asset_id = 1;
  int32 display_form = 2;
}

message RoomHotInfo {
  int32 local_hot_strategy = 1;
  int32 public_area_level = 2;
  int32 gift_level = 3;
}

message SeriesPlayGift {
  GiftStruct gift_struct = 1;
  SeriesTrayInfo series_tray_info = 2;
  SendTogether send_together = 3;
  string diy_item_info = 4;
  AnchorGiftData anchor_gift = 5;
  AssetEffectMixInfo asset_effect_mix_info = 6;
}

message SeriesTrayInfo {
  int64 duration = 1;
  Image static_img = 2;
  Image dynamic_img = 3;
}

message AnchorGiftData {
  Image anchor_diy_origin_img = 1;
}

message AssetEffectMixInfo{
  repeated EffectMixImageInfo effect_mix_image_infos = 1;
}

message EffectMixImageInfo{
  string image_key = 1;
  Image mix_image = 2;
}

// ok
message EcomFansClubMessage {
	Common common = 1;
	int32 action = 2;
	UserInfo user = 3;

  message UserInfo {
    int64 user_id = 1;
    int32 level = 2;
  }
}

// ok
message GiftTrayInfo{
  Text tray_display_text = 1;
  Image tray_base_img = 2;
  Image tray_head_img = 3;
  Image tray_right_img = 4;
  int64 tray_level = 5;
  Image tray_dynamic_img = 6;
  string tray_schema_url = 7;
  int32 tray_type = 8;
  Image tray_base_img_v2 = 9;
  Image tray_right_img_v2 = 10;
  bool use_high_layer = 11;
  int64 duration = 12;
  string toast = 13;
  int32 tray_slide_rate = 14;
  TrayPreEffect tray_pre_effect = 15;
  TrayPostEffect tray_post_effect = 16;
  int64 origin_gift_id = 17;
  int64 buff_level = 18;
  string toolbar_card_name = 19;
  Image tray_base_webp_img = 20;
  int32 tray_group_mode = 21;
}

message TrayPreEffect {
  Image pre_effect_img = 1;
  int64 tray_start_time = 2;
  Image tray_ripple = 3;
  string pre_schema = 4;
  int64 pre_duration = 5;
  int32 pre_effect_source = 6;
  string extra = 7;
}

message TrayPostEffect {
  Image post_effect_img = 1;
  string post_schema = 2;
  int64 post_duration = 3;
  int32 post_effect_source = 4;
}

// ok
message GiftStruct {
  Image image = 1;
  string describe = 2;
  bool notify = 3;
  int64 duration = 4;
  int64 id = 5;
  GiftStructFansClubInfo fansclub_info = 6;
  bool for_linkmic = 7;
  bool doodle = 8;
  bool for_fansclub = 9;
  bool combo = 10;
  int32 type = 11;
  int32 diamond_count = 12;
  bool is_displayed_on_panel = 13;
  int64 primary_effect_id = 14;
  Image gift_label_icon = 15;
  string name = 16;
  string region = 17;
  string manual = 18;
  bool for_custom = 19;
  map<string, int64> specialEffects = 20;
  Image icon = 21;
  int32 action_type = 22;
  int32 watermelon_seeds = 23;
  string gold_effect = 24;
  repeated LuckyMoneyGiftMeta subs = 25;
  int64 golden_beans = 26;
  int64 honor_level = 27;
  int32 item_type = 28;
  string scheme_url = 29;
  GiftPanelOperation gift_operation = 30;
  string event_name = 31;
  int64 noble_level = 32;
  string guide_url = 33;
  bool punish_medicine = 34;
  bool for_portal = 35;
  string business_text = 36;
  bool cny_gift = 37;
  int64 app_id = 38;
  int64 vip_level = 39;
  bool is_gray = 40;
  string gray_scheme_url = 41;
  int64 gift_scene = 42;
  GiftBanner gift_banner = 43;
  repeated string trigger_words = 44;
  repeated GiftBuffInfo gift_buff_infos = 45;
  bool for_first_recharge = 46;
  Image dynamic_img_for_selected = 47;
  int32 after_send_action = 48;
  int64 gift_offline_time = 49;
  string top_bar_text = 50;
  Image top_right_avatar = 51;
  string banner_scheme_url = 52;
  bool is_locked = 53;
  int64 req_extra_type = 54;
  repeated int64 asset_ids = 55;
  GiftPreviewInfo gift_preview_info = 56;
  GiftTip gift_tip = 57;
  int32 need_sweep_light_count = 58;
  repeated GiftGroupInfo group_info = 59;
  Text bottom_text = 60;
  int32 mystery_shop_status = 61;
  repeated int64 optional_asset_ids = 62;
  bool disable_wish_list = 63;
  GiftMsgBoard gift_msg_board = 64;
  EmojiInteractResource emoji_interact_resource = 65;
  bool tray_dynamic_img_flippable = 66;
  int64 pico_show_action = 67;
  int64 selected_dynamic_effect = 68;
  GiftTouchLabel gift_touch_label = 69;
  GiftUnselectedBottomInfo unselected_bottom_info = 70;
  GiftConfirmInfo gift_confirm_info = 71;
  int32 biz_type = 72;
  GoodsBizItem biz_item = 73;
  Image webp_image = 74;
  int32 gift_source = 75;
  repeated int64 required_assets = 76;

  message GiftStructFansClubInfo {
    int32 min_level = 1;
    int32 insert_pos = 2;
  }

  message GiftMsgBoard {
    bool for_msg_board = 1;
    string prompt_text = 2;
  }
}

message EmojiInteractResource {
  SendInteractEmojiConfig from_image = 1;
  SendInteractEmojiConfig pass_image = 2;
  SendInteractEmojiConfig to_image = 3;
}

message SendInteractEmojiConfig {
  Image interact_emoji = 1;
  int64 duration_ms = 2;
  int64 start = 3;
  Image own_emoji = 4;
  int64 own_emoji_duration_ms = 5;
  int64 offset = 6;
  int64 scale_up = 7;
  bool reshape = 8;
  string sound_url = 9;
  string reshape_start = 10;
}

message GiftTouchLabel {
  Image icon = 1;
  string unique_key = 2;
}

message GiftUnselectedBottomInfo {
  string text = 1;
}

message GiftConfirmInfo {
  string title = 1;
  string text = 2;
  string cancel_button_text = 3;
  string confirm_button_text = 4;
  int32 confirm_type = 5;
}

message GoodsBizItem {
  BizGoods goods = 1;
  BizEntrance entrance = 2;
}

message BizGoods {
  GoodsStruct goods = 1;
  string extra = 2;
  int64 consume_scene = 3;
}

message BizEntrance {
  string scheme_url = 1;
}

message GoodsStruct {
    int64 goods_id = 1;
    int64 goods_type = 2;
    string name = 3;
    int64 diamond_count = 4;
    Image icon = 5;
    string description = 6;
    int64 offline_time = 7;
    string extra = 8;
    repeated int64 options = 50;
}

message LuckyMoneyGiftMeta {
  Image image = 1;
  string describe = 2;
  int64 id = 3;
  int32 diamond_count =4;
  Image icon = 5;
}

message GiftPanelOperation {
  Image left_image = 1;
  Image right_image = 2;
  string title = 3;
  string title_color = 4;
  int64 title_size = 5;
  string scheme_url = 6;
  string event_name = 7;
}

message GiftBanner {

}

message GiftBuffInfo{

}

message GiftPreviewInfo{

}

message GiftTip {
  Text display_text = 1;
  string background_color = 2;
  Image prefix_image = 3;
  int64 remaining_duration = 4;
  Text remaining_duration_suffix_text = 5;
  int64 countdown_deadline_time = 6;
}

message GiftGroupInfo {
  int32 group_count = 1;
  string group_text = 2;
}

message GiftIMPriority {
  repeated int64 queueSizesList = 1;
  int64 selfQueuePriority = 2;
  int64 priority = 3;
}

message TextEffect {
  TextEffectDetail portrait = 1;
  TextEffectDetail landscape = 2;
}

message TextEffectDetail {
  Text text = 1;
  int32 textFontSize = 2;
  Image background = 3;
  int32 start = 4;
  int32 duration = 5;
  int32 x = 6;
  int32 y = 7;
  int32 width = 8;
  int32 height = 9;
  int32 shadowDx = 10;
  int32 shadowDy = 11;
  int32 shadowRadius = 12;
  string shadowColor = 13;
  string strokeColor = 14;
  int32 strokeWidth = 15;
}

// ok
message MemberMessage {
  Common common = 1;
  User user = 2;
  string member_count = 3;
  User operator = 4;
  bool is_set_to_admin = 5;
  bool is_top_user = 6;
  string rank_score = 7;
  string top_user_no = 8;
  string enter_type = 9;
  string action = 10;
  string action_description = 11;
  string user_id = 12;
  EffectConfig effect_config = 13;
  string pop_str = 14;
  EffectConfig enter_effect_config = 15;
  Image background_image = 16;
  Image background_image_v2 = 17;
  Text anchor_display_text = 18;
  PublicAreaCommon public_area_common = 19;
  string user_enter_tip_type = 20;
  string anchor_enter_tip_type = 21;
  map<string, string> buried_point = 22;
  map<string, EffectConfig> alternative_effect_config = 23;
  PicoEffectConfig pico_enter_effect_config = 24;

  message PicoEffectConfig {
    int64 type = 1;
    Image icon = 2;
    Text text = 3;
    Image text_icon = 4;
    int32 stay_time = 5;
    Image badge = 6;
    int64 center_anim_asset_id = 7;
    string dress_id = 8;
  }

  message EffectConfig {
    int64 type = 1;
    Image icon = 2;
    int64 avatar_pos = 3;
    Text text = 4;
    Image text_icon = 5;
    int32 stay_time = 6;
    int64 anim_asset_id = 7;
    Image badge = 8;
    repeated int64 flex_setting_array = 9;
    Image text_icon_overlay = 10;
    Image animated_badge = 11;
    bool has_sweep_light = 12;
    repeated int64 text_flex_setting_array = 13;
    int64 center_anim_asset_id = 14;
    Image dynamic_image = 15;
    map<string,string> extra = 16;
    int64 mp4_anim_asset_id = 17;
    int64 priority = 18;
    int64 max_wait_time = 19;
    string dress_id = 20;
    int64 alignment = 21;
    int64 alignment_offset = 22;
    string effect_scene = 23;
    map<string, TextPiece> piece_values = 24;
  }
}


message PublicAreaCommon {
  Image user_label = 1;
  int64 user_consume_in_room = 2;
  int64 user_send_gift_cnt_in_room = 3;
  int64 individual_priority = 4;
  map<string, string> individual_strategy_result = 5;
  int64 support_pin = 6;
  SuffixText suffix_text = 7;
  int32 im_action = 8;
  bool forbidden_profile = 9;
  ChatReplyRespInfo reply_resp = 10;
  map<string, string> tracking_params = 11;
  int64 is_featured = 12;
  bool need_filter_display = 13;
}

message SuffixText {
  int64 biz_type = 1;
  Text text = 2;
}

message ChatReplyRespInfo {
  int64 reply_msg_id = 1;
  int64 reply_id = 2;
  Text reply_text = 3;
  int64 reply_uid = 4;
  string reply_webcast_uid = 5;
}

message Text {
  string key = 1;
  string default_pattern = 2;
  TextFormat default_format = 3;
  repeated TextPiece pieces = 4;
  map<string, SchemaInfo> schema_infos = 20;
}

message TextPiece {
  int32 type = 1;
  TextFormat format = 2;
  string value_ref = 3;
  string string_value = 11;
  TextPieceUser user_value = 21;
  TextPieceGift gift_value = 22;
  TextPieceHeart heart_value = 23;
  TextPiecePatternRef pattern_ref_value = 24;
  TextPieceImage image_value = 25;
  string schema_key = 100;
}

message TextPieceImage {
  Image image = 1;
  float scalingRate = 2;
}

message TextPiecePatternRef {
  string key = 1;
  string defaultPattern = 2;
}

message TextPieceHeart {
  string color = 1;
}

message TextPieceGift {
  int64 giftId = 1;
  PatternRef nameRef = 2;
}

message PatternRef {
  string key = 1;
  string default_pattern = 2;
}

message TextPieceUser {
  User user = 1;
  bool with_colon = 2;
  bool self_show_real_name = 3;
  int32 left_show_extension = 4;
  string left_additional_content = 5;
  string right_additional_content = 6;
}

message TextFormat {
  string color = 1;
  bool bold = 2;
  bool italic = 3;
  int32 weight = 4;
  int32 italic_angle = 5;
  int32 font_size = 6;
  bool use_heigh_light_color = 7;
  bool use_remote_clor = 8;
}

// ok
message LikeMessage {
  Common common = 1;
  int64 count = 2;
  int64 total = 3;
  int64 color = 4;
  User user = 5;
  string icon = 6;
  DoubleLikeDetail double_like_detail = 7;
  DisplayControlInfo display_control_info = 8;
  int64 linkmic_guest_uid = 9;
  string scene = 10;
  PicoDisplayInfo pico_display_info = 11;
  PublicAreaCommon public_area_common = 12;
}

// ok
message SocialMessage {
  Common common = 1;
  User user = 2;
  int64 share_type = 3;
  int64 action = 4;
  string share_target = 5;
  int64 follow_count = 6;
  PublicAreaCommon public_area_common = 7;
}

message PicoDisplayInfo {
  int64 comboSumCount = 1;
  string emoji = 2;
  Image emojiIcon = 3;
  string emojiText = 4;
}

message DoubleLikeDetail {
  bool doubleFlag = 1;
  int32 seqId = 2;
  int32 renewalsNum = 3;
  int32 triggersNum = 4;
}

message DisplayControlInfo {
  bool showText = 1;
  bool showIcons = 2;
}

// ok
message EpisodeChatMessage {
  Common common = 1;
  User user = 2;
  string content = 3;
  bool visible_to_sender = 4;
  Image background_image = 5;
  PublicAreaCommon public_area_common = 6;
  Image gift_image = 7;
  int64 agree_msg_id = 8;
  repeated string color_value = 9;
}

// ok
message MatchAgainstScoreMessage {
  Common common = 1;
  Against against = 2;
  int32 match_status = 3;
  int32 display_status = 4;
  int64 match_id = 5;
  string match_id_str = 6;
}

message Against {
  string left_name = 1;
  Image left_logo = 2;
  string left_goal = 3;
  PlayerInfo left_players = 4;
  GoalStageDetail left_goal_stage_detail = 5;
  string right_name = 6;
  Image right_logo = 7;
  string right_goal = 8;
  PlayerInfo right_players  = 9;
  GoalStageDetail right_goal_stage_detail = 10;
  int64 timestamp = 11;
  int64 version = 12;
  int64 left_team_id = 13;
  int64 right_team_id = 14;
  int64 diff_sei2abs_second = 15;
  int32 final_goal_stage = 16;
  int32 current_goal_stage  =17;
  int32 left_score_addition  =18;
  int32 right_score_addition  =19;
  int64 left_goal_int = 20;
  int64 right_goal_int = 21;
  BasketBallGoalStageDetail left_score_detail = 22;
  BasketBallGoalStageDetail right_score_detail = 23;
  BasketballStage basketball_stage = 24;
  ESportsStage esport_stage = 25;
}

message PlayerInfo {
  string id = 1;
  string name = 2;
  int32 shirt = 3;
  string position = 4;
  int32 lineup_type = 5;
  Image portrait = 6;
  PlayByPlayItemInfo last_event = 7;
  double x_axis = 8;
  double y_axis = 9;
  int32 position_num = 10;
  double playing_time = 11;
  PlayerStats player_stats = 12;
  string player_id_str = 13;
  PlayByPlayItemInfo last_up_event = 14;
  repeated PlayByPlayItemInfo event_list = 15;
  int32 age = 16;
  double worth = 17;
  string club_name = 18;
  bool superstar_flag = 19;
  Image superstar_img = 20;
  string superstar_name = 21;
  string superstar_desc = 22;
}

message PlayByPlayItemInfo {
  int64 timestamp = 1;
  int64 player_id = 2;
  int64 ref_player_id = 3;
  int32 incident_type = 4;
  double elapsed = 5;
  double elapsed_plus = 6;
  string player_name = 7;
  string ref_player_name = 8;
  string player_id_str = 9;
  string ref_player_id_str = 10;
  int64 start_time_pts = 11;
  int64 end_time_pts = 12;
  int64 start_time_sei = 13;
  int64 end_time_sei = 14;
}

message PlayerStats {
  string player_id = 1;
  string team_id = 2;
  double minutes_played = 3;
  double goals = 4;
  double assists = 5;
  double shots = 6;
  double shots_on = 7;
  double y_cards = 8;
  double r_cards = 9;
  double offsides = 10;
  double fouls_committed = 11;
  double own_goals = 12;
  double saves = 13;
  double caught_ball = 14;
  double clean_sheets = 15;
  double pass = 16;
  double key_pass = 17;
  double passes_completed = 18;
  double steal = 19;
  double intercept = 20;
  double clearances = 21;
}

message GoalStageDetail {
  string first_half_goal= 1;
  string second_half_goal = 2;
  string overtime = 3;
  string shots = 4;
  string total = 5;
}

message BasketBallGoalStageDetail {
  int32 first_period = 1;
  int32 second_period = 2;
  int32 third_period = 3;
  int32 forth_period = 4;
  int32 overtime = 5;
  int32 total = 6;
}

message BasketballStage {
  int32 current_stage = 1;
  int32 final_stage = 2;
}

message ESportsStage {
  int32 current_stage = 1;
  int32 final_stage = 2;
}

message Common {
    string method = 1;
    int64 msg_id = 2;
    int64 room_id = 3;
    int64 create_time = 4;
    int32 monitor = 5;
    bool is_show_msg = 6;
    string describe = 7;
    Text display_text = 8;
    int64 fold_type = 9;
    int64 anchor_fold_type = 10;
    int64 priority_score = 11;
    string log_id = 12;
    string msg_process_filter_k = 13;
    string msg_process_filter_v = 14;
    User user = 15;
    Room room = 16;
    int64 anchor_fold_type_v2 = 17;
    int64 process_at_sei_time_ms = 18;
    int64 random_dispatch_ms = 19;
    bool is_dispatch = 20;
    int64 channel_id = 21;
    int64 diff_sei2abs_second = 22;
    int64 anchor_fold_duration = 23;
    int64 app_id = 24;
}

message Room {
  int64 id = 1;
  string id_str = 2;
  int64 status = 3;
  int64 owner_user_id = 4;
  string title = 5;
  int64 user_count = 6;
  int64 create_time = 7;
  int64 linkmic_layout = 8;
  int64 finish_time = 9;
  RoomExtra extra = 10;
  string dynamic_cover_uri = 11;
  map<int64, string> dynamicCoverDict = 12;
  int64 last_ping_time = 13;
  int64 live_id = 14;
  int64 stream_provider = 15;
  int64 os_type = 16;
  string client_version = 17;
  bool with_linkmic = 18;
  bool enable_room_perspective = 19;
  Image cover = 20;
  Image dynamic_cover = 21;
  Image dynamic_cover_low = 22;
  string share_url = 23;
  string anchor_share_text = 24;
  string user_share_text = 25;
  int64 stream_id = 26;
  string stream_id_str = 27;
  StreamUrl stream_url = 28;
  int64 mosaic_status = 29;
  string mosaic_tip = 30;
  int64 cell_style = 31;
  LinkMic link_mic = 32;
  int64 luckymoney_num = 33;
  repeated Decoration deco_list = 34;
  repeated TopFan top_fans = 35;
  RoomStats stats = 36;
  string sun_daily_icon_content = 37;
  string distance = 38;
  string distance_city = 39;
  string location = 40;
  string real_distance = 41;
  Image feed_room_label = 42;
  string common_label_list = 43;
  RoomUserAttr living_room_attrs = 44;
  repeated int64 admin_user_ids = 45;
  User owner = 46;
  string private_info = 47;
  bool has_commerce_goods = 48;
  bool live_type_normal = 49;
  bool live_type_linkmic = 50;
  bool live_type_audio = 51;
  bool live_type_third_party = 52;
  bool live_type_screenshot = 53;
  bool live_type_sandbox = 54;
  bool live_type_official = 55;
  int64 group_id = 59;
  int64 orientation = 60;
  int64 category = 61;
  repeated int64 tags = 62;
  int64 start_time = 63;
  int64 popularity = 64;
  string popularity_str = 65;
  int64 fcdn_appid = 66;
  bool sell_goods = 68;
  int64 web_count = 69;
  string vertical_cover_uri = 70;
  int64 base_category = 71;
  RoomAuthStatus room_auth = 72;
  repeated RoomTab room_tabs = 73;
  string introduction = 74;
  BurstInfo burst = 75;
  RoomHealthScoreInfo health_score = 76;
  bool is_replay = 77;
  string vid = 78;
  int64 group_source = 79;
  int64 lottery_finish_time = 80;
  RoomActivityTag activity_tag = 81;
  Image portrait_cover = 82;
  Image background = 83;
  int64 layout = 84;
  string wait_copy = 85;
  Image guide_button = 86;
  string preview_copy = 87;
  bool is_show_inquiry_ball = 88;
  MatchInfo match_info = 89;
  bool use_filter = 90;
  int64 gift_msg_style = 91;
  string distance_km = 92;
  string finish_url = 93;
  OfficialRoomInfo official_room_info = 94;
  bool is_show_user_card_switch = 95;
  string video_feed_tag = 96;
  string forum_extra_data = 97;
  int64 fansclub_msg_style = 98;
  int64 follow_msg_style = 99;
  int64 share_msg_style = 100;
  int64 room_layout = 101;
  string short_title = 102;
  RoomShortTouchAreaConfig short_touch_area_config = 103;
  int64 book_time = 104;
  int64 book_end_time = 105;
  int64 room_audit_status = 106;
  repeated int64 live_distribution = 107;
  TVStation tv = 108;
  bool replay = 109;
  string challenge_info = 110;
  int64 like_count = 111;
  int64 search_id = 112;
  string anchor_scheduled_time_text = 113;
  string hot_sentence_info = 114;
  int64 replay_location = 115;
  int64 stream_close_time = 116;
  string content_tag = 117;
  Image content_label = 118;
  Image operation_label = 119;
  int32 anchor_tab_type = 120;
  GameExtra game_extra = 121;
  OfficialChannelInfo official_channel = 122;
  string stamps = 123;
  CommentBox comment_box = 124;
  int32 business_live = 125;
  bool with_ktv = 126;
  bool with_draw_something = 127;
  int64 webcast_comment_tcs = 128;
  int64 room_tag = 129;
  int32 finish_reason = 131;
  RoomCart room_cart = 132;
  string scroll_config = 133;
  string relation_tag = 134;
  int64 owner_device_id = 135;
  int64 auto_cover = 136;
  int64 app_id = 137;
  int64 webcast_sdk_version = 138;
  int64 comment_name_mode = 139;
  string room_create_ab_param = 140;
  int64 pre_enter_time = 141;
  int64 ranklist_audience_type = 142;
  int64 preview_flow_tag = 143;
  Image preview_tag_url = 144;
  QuizExtra quiz_extra = 145;
  LinkerUsers linker_users = 147;
  int64 linkmic_display_type = 148;
  AudioBGData AudioRoomBGImage = 149;
  LinkerUsers city_top_linker_users = 150;
  BorderInfo border_info = 151;
  Image city_top_background = 152;
  string city_top_distance = 153;
  int64 live_room_mode = 154;
  Bonus bonus = 155;
  bool highlight = 156;
  bool is_official_channel_room = 157;
  ActivityRoomSkinInfo activity_room_skin_info = 158;
  repeated int64 fans_group_admin_user_ids = 159;
  RoomReplayInfo replay_info = 160;
  int64 official_channel_uid = 161;
  string live_platform_source = 162;
  int64 acquaintance_status = 163;
  CommentWallInfo comment_wall_info = 164;
  CommentWallPosition comment_wall_position = 165;
  bool live_type_vs_live = 166;
  bool live_type_vs_premiere = 167;
  EpisodeExtraInfo episode_extra = 168;
  repeated int32 vs_roles = 169;
  string item_explicit_info = 170;
  ShortTouchAuth short_touch_auth = 171;
  int64 sofa_layout = 172;
  AnnouncementInfo announcement_info = 173;
  bool is_need_check_list = 174;
  LiveStatusInfo live_status_info = 175;
  RoomIMInfo im_info = 176;
  LabelInfo assist_label = 177;
  InteractOpenExtra interact_open_extra = 178;
  VerticalTypeInfo vertical_type_info = 179;
  repeated FilterWord filter_words = 180;
  LabelInfo dynamic_label = 181;
  LinkerDetail linker_detail = 182;
  int32 visibility_range = 183;
  CornerMarkReach corner_mark_reach = 184;
  PreviewExposeData preview_expose = 185;
  WelfareProjectInfo welfare_project_info = 186;
  int32 game_room_type = 187;
  PaidLiveData paid_live_data = 188;
  EasterEggData easter_egg_data = 189;
  bool title_recommend = 190;
  int64 danmaku_detail = 191;
  AvatarLiveInfo avatar_live_info = 192;
  CircleInfo circle_info = 193;
  int64 has_promotion_games = 194;
  Image screenshot_sover = 195;
  Appearance appearance = 196;
  EcomData ecom_data = 197;
  IndustryServiceInfo industry_service_info = 198;
  RelevantRecommendation relevant_recommendation = 199;
  RoomSpecificSceneTypeInfo scene_type_info = 200;
  GameCPData game_cp = 201;
  GamePlayData game_play = 202;
  UnionLiveInfo union_live_info = 203;
  BeautifyInfo beautify_info = 204;
  ToolBarData toolbar_data = 205;
  AnchorTabLabel anchor_tab_label = 206;
  LifeGrouponInfo life_groupon_info = 207;
  VipData vip_data = 208;
  int64 toutiao_cover_recommend_level = 209;
  int64 toutiao_title_recommend_level = 210;
  repeated UpperRightWidgetData upper_right_widget_data_list = 211;
  FeedbackCard live_feedback_card = 212;
  repeated LabelInfo assist_label_list = 213;
  DesireInfo desire_info = 214;
  HotRoomInfo hot_room_info = 215;
  bool with_aggregate_column = 216;
  CastScreenData cast_screen_data = 217;
  OfficialChannelExtraInfo official_channel_extra = 218;
  string auth_city = 219;
  ActivityLiveRecommendConfig activity_live_recommend_config = 220;
  RoomChannelData room_channel = 221;
  PackMetaInfo pack_meta = 222;
  ActivityData activity_data = 223;
  LikeDisplayConfig like_display_config = 224;
  RoomViewStats room_view_stats = 225;
  MatchRoomData match = 226;
  CommentaryRoomInfo commentary_room_info = 227;
  int64 redpacket_audience_auth = 228;
  MatchChatConfig match_chat_config = 229;
  int64 vs_main_replay_id = 230;
  string screen_capture_sharing_title = 231;
  ShareResource share_resource = 232;
  repeated string sharing_music_id_list = 233;
  PublicScreenBottomInfo public_screen_bottom_info = 234;
  StreamUrl push_stream_hkt = 235;
  RoomBasisData basis = 300;
  RoomInteractData interact = 301;
  RoomRevenueData revenue = 302;
  RoomReqUserData req_user = 303;
  RoomAnchorData anchor_data = 304;
  RoomOthersData others = 305;
  PicoInfo pico_info = 306;
  RoomGameData game_data = 307;
  RoomFeedData feed_data = 308;
  OpenContentData open_content_data = 309;
  ClientComponent client_component_data = 310;
  RoomPlatformComponentsData platform_components_data = 311;
  IOSClientComponent ios_client_component_data = 312;
}

message RoomExtra {
    bool is_sandbox = 1;
    RegionRestriction enter_region_restriction = 2;
    RegionMatch enter_region_match = 3;
    SafeReason filter_with_no_context = 4;
    int64 xigua_uid = 5;
    int64 limit_strategy = 6;
    string limit_appid = 7;
    int32 geo_block = 8;
    int32 vr_type = 9;
    bool is_virtual_anchor = 10;
    string create_scene = 11;
    bool realtime_replay_enabled = 12;
    int64 realtime_playback_shift = 13;
    int64 realtime_playback_start_shift = 14;
    repeated StreamUrl.LiveCoreSDKData.PullData.Options.Quality realtime_playback_qualities = 15;

    message RegionRestriction {
        // 假设 RegionRestriction 的字段定义，实际定义需要根据具体情况填写
    }

    message RegionMatch {
        // 假设 RegionMatch 的字段定义，实际定义需要根据具体情况填写
    }

    message SafeReason {
        // 假设 SafeReason 的字段定义，实际定义需要根据具体情况填写
    }

    message StreamUrl {
        message LiveCoreSDKData {
            message PullData {
                message Options {
                    message Quality {
                        // 假设 Quality 的字段定义，实际定义需要根据具体情况填写
                    }
                }
            }
        }
    }

}

message StreamUrl {
    int64 provider = 1;
    int64 id = 2;
    string id_str = 3;
    string default_resolution = 5;
    StreamUrlExtra extra = 6;
    string rtmp_push_url = 7;
    string rtmp_pull_url = 8;
    repeated string candidate_resolution = 10;
    string hls_pull_url = 11;
    string hls_pull_url_params = 12;
    string rtmp_pull_url_params = 13;
    string rtmp_push_url_params = 15;
    repeated string push_urls = 16;
    LiveCoreSDKData live_core_sdk_data = 17;
    repeated string complete_push_urls = 19;
    int32 stream_control_type = 20;
    int32 stream_orientation = 21;
    int32 push_stream_type = 22;
    PlaySetting play = 24;
    int32 vr_type = 26;

    message StreamUrlExtra {
        // 假设 StreamUrlExtra 的字段定义，实际定义需要根据具体情况填写
    }

    message LiveCoreSDKData {
        // 假设 LiveCoreSDKData 的字段定义，实际定义需要根据具体情况填写
    }

    message PlaySetting {
        // 假设 PlaySetting 的字段定义，实际定义需要根据具体情况填写
    }
}

message LinkMic {
    int64 channel_id = 1;
    LinkMicChannelInfo channel_info = 2;
    repeated LinkMicBattleScore battle_scores = 3;
    LinkMicBattleSetting battle_settings = 4;
    int64 rival_anchor_id = 5;
    int64 linkmic_anchor_count = 6;

    message LinkMicChannelInfo {
        // 假设 LinkMicChannelInfo 的字段定义，实际定义需要根据具体情况填写
    }

    message LinkMicBattleScore {
        // 假设 LinkMicBattleScore 的字段定义，实际定义需要根据具体情况填写
    }

    message LinkMicBattleSetting {
        // 假设 LinkMicBattleSetting 的字段定义，实际定义需要根据具体情况填写
    }
}

message Decoration {
    int64 id = 1;
    Image image = 2;
    int64 type = 3;
    repeated int64 input_rect = 4;
    int64 text_size = 5;
    string text_color = 6;
    string content = 7;
    int64 max_length = 8;
    int64 status = 9;
    int64 h = 10;
    int64 x = 11;
    int64 w = 12;
    int64 y = 13;
    int64 kind = 14;
    int64 sub_type = 15;
    Reservation reservation = 16;
    Image nine_patch_image = 17;
    repeated int64 text_special_effects = 18;
    int64 text_image_adjustable_start_position = 19;
    int64 text_image_adjustable_end_position = 20;
    DecorationFontConfig text_font_config = 21;
    string audit_text_color = 22;

    message Reservation {

    }

    message DecorationFontConfig {

    }
}

message TopFan {
    int64 fan_ticket = 1;
    User user = 2;
}

message RoomStats {
    int64 id = 1;
    string id_str = 2;
    int64 fan_ticket = 3;
    int64 money = 4;
    int64 total_user = 5;
    int64 gift_uv_count = 6;
    int64 follow_count = 7;
    message UserCountComposition {
        double city = 1;
        double video_detail = 2;
        double my_follow = 3;
        double other = 4;
    }
    UserCountComposition user_count_composition = 8;
    int64 watermelon = 9;
    int64 digg_count = 10;
    int64 enter_count = 11;
    string dou_plus_promotion = 12;
    string total_user_desp = 13;
    int64 like_count = 14;
    string total_user_str = 15;
    string user_count_str = 16;
    int64 comment_count = 17;
    int64 welfare_donation_amount = 18;
    string up_right_stats_str = 19;
    string up_right_stats_str_complete = 20;
}

message RoomUserAttr {
    int64 room_id = 1;
    string room_id_str = 2;
    int64 silence_flag = 3;
    int64 admin_flag = 4;
    int64 rank = 5;
}

message RoomAuthStatus {
    bool Chat = 1;
    bool Danmaku = 2;
    bool Gift = 3;
    bool LuckMoney = 4;
    bool Digg = 5;
    bool RoomContributor = 7;
    bool Props = 8;
    bool UserCard = 9;
    bool POI = 10;
    int64 MoreAnchor = 11;
    int64 Banner = 12;
    int64 Share = 13;
    int64 UserCorner = 14;
    int64 Landscape = 15;
    int64 LandscapeChat = 16;
    int64 PublicScreen = 17;
    int64 GiftAnchorMt = 18;
    int64 RecordScreen = 19;
    int64 DonationSticker = 20;
    int64 HourRank = 21;
    int64 CommerceCard = 22;
    int64 AudioChat = 23;
    int64 DanmakuDefault = 24;
    int64 KtvOrderSong = 25;
    int64 SelectionAlbum = 26;
    int64 Like = 27;
    int64 MultiplierPlayback = 28;
    int64 DownloadVideo = 29;
    int64 Collect = 30;
    int64 TimedShutdown = 31;
    int64 Seek = 32;
    int64 Denounce = 33;
    int64 Dislike = 34;
    int64 OnlyTa = 35;
    int64 CastScreen = 36;
    int64 CommentWall = 37;
    int64 BulletStyle = 38;
    int64 ShowGamePlugin = 39;
    int64 VSGift = 40;
    int64 VSTopic = 41;
    int64 VSRank = 42;
    int64 AdminCommentWall = 43;
    int64 CommerceComponent = 44;
    int64 DouPlus = 45;
    int64 GamePointsPlaying = 46;
    int64 Poster = 47;
    int64 Highlights = 48;
    int64 TypingCommentState = 49;
    int64 StrokeUpDownGuide = 50;
    int64 UpRightStatsFloatingLayer = 51;
    int64 CastScreenExplicit = 52;
    int64 Selection = 53;
    int64 IndustryService = 54;
    int64 VerticalRank = 55;
    int64 EnterEffects = 56;
    int64 FansClub = 57;
    int64 EmojiOutside = 58;
    int64 CanSellTicket = 59;
    int64 DouPlusPopularityGem = 60;
    int64 MissionCenter = 61;
    int64 ExpandScreen = 62;
    int64 FansGroup = 63;
    int64 Topic = 64;
    int64 AnchorMission = 65;
    int64 Teleprompter = 66;
    int64 ChatDynamicSlideSpeed = 67;
    int64 SmallWindowDisplay = 68;
    int64 MessageDispatch = 69;
    int64 RoomChannel = 70;
    int64 ChatDispatch = 71;
    int64 LinkmicGuestLike = 72;
    int64 MediaLinkmic = 73;
    int64 VideoShare = 74;
    int64 ChatGuideEmoji = 75;
    int64 ChatGuideImage = 76;
    int64 PCPlay = 77;
    int64 PadPlay = 78;
    int64 LongTouch = 79;
    int64 FirstFeedHistChat = 80;
    int64 MoreHistChat = 81;
    int64 WordAssociation = 82;
    int64 LandscapeScreenCapture = 83;
    int64 LandscapeScreenRecording = 84;
    int64 ScreenProjectionBarrage = 85;
    int64 SmallWindowPlayer = 86;
    int64 ChatOperate = 87;
    int64 EcomFansClub = 88;
    int64 AudioChatTotext = 89;
    int64 CommonCard = 90;
    int64 ShortTouch = 91;
    int64 HostTeamChannel = 92;
    int64 LandscapeChatDynamicSlideSpeed = 93;
    int64 HostTeam = 94;
    int64 AnchorHotMessageAggregated = 95;
    int64 AnchorColdMessageTiled = 96;
    int64 ScreenBottomInfo = 97;
    int64 PreviewHotCommentSwitch = 98;
    int64 RoomWidget = 99;
    RoomAuthOffReasons OffReason = 100;
    RoomAuthSpecialStyle SpecialStyle = 101;
    int64 PanelECService = 102;
    int64 FixedChat = 103;
    int64 LandscapeGift = 104;
    int64 HotChatTray = 105;
    int64 ItemShare = 106;
    int64 ShortTouchTempState = 107;
    int64 StickyMessage = 108;
    int64 ProjectionBtn = 109;
    int64 ChatDynamicSlideSpeedAnchor = 110;
    int64 PosterCache = 111;
    int64 MediaHistoryMessage = 112;
    int64 ToolbarBubble = 113;
    int64 ImHeatValue = 114;
    int64 InteractiveComponent = 115;
    int64 ChatReply = 116;
    int64 ChatMention = 117;
    int64 FrequentlyChat = 118;
    int64 StreamAdaptation = 119;
    int64 VideoAmplificationType = 120;
    int64 FeaturedPublicScreen = 121;
    int64 LandscapeScreenShare = 122;
    int64 VerticalScreenShare = 123;
    int64 AnchorAudioChat = 124;
    int64 PreviewChatExpose = 125;
    int64 FusionEmoji = 126;
    int64 VsCommentBar = 200;
    int64 VsWelcomeDanmaku = 201;
    int64 VsFansClub = 202;
    int64 VsExtensionEnableFollow = 203;
    int64 VsDouPlus = 204;
    int64 QuizGamePointsPlaying = 205;
    int64 UgcVSReplayDelete = 206;
    int64 UgcVsReplayVisibility = 207;
    int64 InteractionGift = 208;
    int64 SubscribeCardPackage = 209;
    int64 ShowQualification = 210;

    message RoomAuthOffReasons {

    }

    message RoomAuthSpecialStyle {

    }
}

message RoomTab {
    int32 tab_type = 1;
    string tab_name = 2;
    string tab_url = 3;
}

message BurstInfo {
    int64 burst_time_remain_seconds = 1;
    int64 multiple = 2;
    int64 property_definition_id = 3;
    Image property_icon = 4;
}

message RoomHealthScoreInfo {
    double score = 1;
    string bubble_message = 2;
    string jump_url = 3;
}

message RoomActivityTag {
    int32 activity_type = 1;
    string name = 2;
    string url = 3;
    string extra = 4;
    Image icon = 5;
}

message MatchInfo {
    MatchSkinInfo skin = 1;

    message MatchSkinInfo {

    }

    message FollowBtnSkin {

    }
}

message OfficialRoomInfo {
    bool is_show_more_anchor = 1;
    bool is_use_server_subtitle = 2;
    string server_subtitle = 3;
}

message QuizExtra {
    string quiz_infos = 1;
}

message LinkerUsers {
    int64 count = 1;
    repeated User users_info = 2;
}

message AudioSpeakingImageList {
    // 假设 AudioSpeakingImageList 的字段定义，实际定义需要根据具体情况填写
}

message AnimatedBgInfo {
    // 假设 AnimatedBgInfo 的字段定义，实际定义需要根据具体情况填写
}

message AudioBGData {
    int64 id = 1;
    string image_uri = 2;
    int32 img_type = 3;
    Image image = 4;
    Image imageThumbnail = 5;
    Image imageAnimatedBG = 6;
    Image imageNormalAvatar = 7;
    Image imageStartupAvatar = 8;
    Image imageChatJoinIcon = 9;
    Image imageStaticBG = 10;
    AudioSpeakingImageList speakingImageList = 11;
    string status_color_value = 12;
    string public_screen_color_value = 13;
    int32 time_limit = 14;
    int32 bg_type = 15;
    string empty_start_color = 16;
    string empty_end_color = 17;
    Image imageColdBG = 18;
    string micBGColorValue = 19;
    repeated Image iconMicNormals = 20;
    Image iconMicLock = 21;
    string colorMicText = 22;
    string colorMicLine = 23;
    string colorMicBG = 24;
    string themeLabel = 25;
    int32 bgStatus = 26;
    AnimatedBgInfo animateInfo = 27;
    string idStr = 28;
    int32 play_mode = 29;
    string theme_tag = 30;
    int64 start_time = 31;
    int64 end_time = 32;
    int32 format_type = 33;
    AudioSpeakingImageList speaking_image_v2 = 34;
}

message BorderInfo {
    // 假设 BorderInfo 的字段定义，实际定义需要根据具体情况填写
}

message Bonus {
    // 假设 Bonus 的字段定义，实际定义需要根据具体情况填写
}

message ActivityRoomSkinInfo {
    // 假设 ActivityRoomSkinInfo 的字段定义，实际定义需要根据具体情况填写
}

message RoomReplayInfo {
    // 假设 RoomReplayInfo 的字段定义，实际定义需要根据具体情况填写
}

message CommentWallInfo {
    // 假设 CommentWallInfo 的字段定义，实际定义需要根据具体情况填写
}

message CommentWallPosition {
    // 假设 CommentWallPosition 的字段定义，实际定义需要根据具体情况填写
}

message EpisodeExtraInfo {
    // 假设 EpisodeExtraInfo 的字段定义，实际定义需要根据具体情况填写
}

message RoomShortTouchAreaConfig {
    // 假设 RoomShortTouchAreaConfig 的字段定义，实际定义需要根据具体情况填写
}

message AnnouncementInfo {
    // 假设 AnnouncementInfo 的字段定义，实际定义需要根据具体情况填写
}

message LiveStatusInfo {
    // 假设 LiveStatusInfo 的字段定义，实际定义需要根据具体情况填写
}

message RoomIMInfo {
    // 假设 RoomIMInfo 的字段定义，实际定义需要根据具体情况填写
}

message LabelInfo {
    // 假设 LabelInfo 的字段定义，实际定义需要根据具体情况填写
}

message InteractOpenExtra {
    // 假设 InteractOpenExtra 的字段定义，实际定义需要根据具体情况填写
}

message VerticalTypeInfo {
    // 假设 VerticalTypeInfo 的字段定义，实际定义需要根据具体情况填写
}

message FilterWord {
    // 假设 FilterWord 的字段定义，实际定义需要根据具体情况填写
}

message LinkerDetail {
    // 假设 LinkerDetail 的字段定义，实际定义需要根据具体情况填写
}

message CornerMarkReach {
    // 假设 CornerMarkReach 的字段定义，实际定义需要根据具体情况填写
}

message PreviewExposeData {
    // 假设 PreviewExposeData 的字段定义，实际定义需要根据具体情况填写
}

message WelfareProjectInfo {
    // 假设 WelfareProjectInfo 的字段定义，实际定义需要根据具体情况填写
}

message PaidLiveData {
    // 假设 PaidLiveData 的字段定义，实际定义需要根据具体情况填写
}

message EasterEggData {
    // 假设 EasterEggData 的字段定义，实际定义需要根据具体情况填写
}

message AvatarLiveInfo {
    // 假设 AvatarLiveInfo 的字段定义，实际定义需要根据具体情况填写
}

message CircleInfo {
    // 假设 CircleInfo 的字段定义，实际定义需要根据具体情况填写
}

message ActivityLiveRecommendConfig {
    // 假设 ActivityLiveRecommendConfig 的字段定义，实际定义需要根据具体情况填写
}

message RoomChannelData {
    // 假设 RoomChannelData 的字段定义，实际定义需要根据具体情况填写
}

message PackMetaInfo {
    // 假设 PackMetaInfo 的字段定义，实际定义需要根据具体情况填写
}

message ActivityData {
    // 假设 ActivityData 的字段定义，实际定义需要根据具体情况填写
}

message LikeDisplayConfig {
    // 假设 LikeDisplayConfig 的字段定义，实际定义需要根据具体情况填写
}

message RoomViewStats {
    // 假设 RoomViewStats 的字段定义，实际定义需要根据具体情况填写
}

message MatchRoomData {
    // 假设 MatchRoomData 的字段定义，实际定义需要根据具体情况填写
}

message CommentaryRoomInfo {
    // 假设 CommentaryRoomInfo 的字段定义，实际定义需要根据具体情况填写
}

message MatchChatConfig {
    // 假设 MatchChatConfig 的字段定义，实际定义需要根据具体情况填写
}

message ShareResource {
    // 假设 ShareResource 的字段定义，实际定义需要根据具体情况填写
}

message PublicScreenBottomInfo {
    // 假设 PublicScreenBottomInfo 的字段定义，实际定义需要根据具体情况填写
}

message RoomBasisData {
    // 假设 RoomBasisData 的字段定义，实际定义需要根据具体情况填写
}

message RoomInteractData {
    // 假设 RoomInteractData 的字段定义，实际定义需要根据具体情况填写
}

message RoomRevenueData {
    // 假设 RoomRevenueData 的字段定义，实际定义需要根据具体情况填写
}

message RoomReqUserData {
    // 假设 RoomReqUserData 的字段定义，实际定义需要根据具体情况填写
}

message RoomAnchorData {
    // 假设 RoomAnchorData 的字段定义，实际定义需要根据具体情况填写
}

message RoomOthersData {
    // 假设 RoomOthersData 的字段定义，实际定义需要根据具体情况填写
}

message PicoInfo {
    // 假设 PicoInfo 的字段定义，实际定义需要根据具体情况填写
}

message RoomGameData {
    // 假设 RoomGameData 的字段定义，实际定义需要根据具体情况填写
}

message RoomFeedData {
    // 假设 RoomFeedData 的字段定义，实际定义需要根据具体情况填写
}

message OpenContentData {
    // 假设 OpenContentData 的字段定义，实际定义需要根据具体情况填写
}

message ClientComponent {
    // 假设 ClientComponent 的字段定义，实际定义需要根据具体情况填写
}

message RoomPlatformComponentsData {
    // 假设 RoomPlatformComponentsData 的字段定义，实际定义需要根据具体情况填写
}

message IOSClientComponent {
    // 假设 IOSClientComponent 的字段定义，实际定义需要根据具体情况填写
}

message TVStation {

}

message GameExtra {

}

message OfficialChannelInfo {

}

message CommentBox {

}

message RoomCart {

}

message ShortTouchAuth {

}

message Appearance {

}

message EcomData {

}

message IndustryServiceInfo {

}

message RelevantRecommendation {

}

message RoomSpecificSceneTypeInfo {

}

message GameCPData {

}

message GamePlayData {

}

message UnionLiveInfo {

}

message BeautifyInfo {

}

message ToolBarData {

}

message AnchorTabLabel {

}

message LifeGrouponInfo {

}

message VipData {

}

message UpperRightWidgetData {

}

message FeedbackCard {

}

message DesireInfo {

}

message CastScreenData {

}

message OfficialChannelExtraInfo {

}


message UserVIPInfo {

}

message IndustryCertification {

}

// ok
message FansclubMessage {
  Common common = 1;
  int32 action = 2;
  string content = 3;
  User user = 4;
  UpgradePrivilege upgrade_privilege = 5;
  PublicAreaCommon public_area_common = 6;

  message UpgradePrivilege {
    string content = 1;
    string description = 2;
    int32 button_type = 3;
  }
}

// ok
message HotRoomMessage {
  Common common = 1;
  HotRoomInfo info = 2;
}

message HotRoomInfo {
  int64 BitMap = 1;
}

// ok
message HotChatMessage {
  Common common = 1;
  string title = 2;
  string content = 3;
  repeated int64 num = 4;
  int64 duration = 5;
  repeated int64 show_duration = 6;
  int64 sequence_id = 7;
  repeated string hot_list = 8;
  Text rtf_content = 9;
  int64 chat_content_type = 10;
  map<string, string> extra = 200;
}


// User
message User {
  string id = 1;
  string short_id = 2;
  string nickname = 3;
  int32 gender = 4;
  string signature = 5;
  int32 level = 6;
  string birthday = 7;
  string telephone = 8;
  Image avatar_thumb = 9;
  Image avatar_medium = 10;
  Image avatar_large = 11;
  bool verified = 12;
  int32 experience = 13;
  string city = 14;
  int32 status = 15;
  string create_time = 16;
  string modify_time = 17;
  int32 secret = 18;
  string share_qrcode_uri = 19;
  int32 income_share_percent = 20;
  repeated Image badge_image_list = 21;
  FollowInfo follow_info = 22;
  PayGrade pay_grade = 23;
  FansClub fans_club = 24;
  Border border = 25;
  string special_id = 26;
  Image avatar_border = 27;
  Image medal = 28;
  repeated Image real_time_icons = 29;
  repeated Image new_real_time_icons = 30;
  string top_vip_no = 31;
  UserAttr user_attr = 32;
  OwnRoom own_room = 33;
  string pay_score = 34;
  string ticket_count = 35;
  AnchorInfo anchor_info = 36;
  int32 link_mic_stats = 37;
  string display_id = 38;
  bool with_commerce_permission = 39;
  bool with_fusion_shop_entry = 40;
  string total_recharge_diamond_count = 41;
  AnchorLevel webcast_anchor_level = 42;
  string verified_content = 43;
  AuthorStats author_stats = 44;
  repeated User top_fans = 45;
  string sec_uid = 46;
  int32 user_role = 47;
  XiguaParams xigua_info = 48;
  ActivityInfo activity_reward = 49;
  NobleLevelInfo noble_info = 50;
  BrotherhoodInfo brotherhood_info = 51;
  Image personal_card = 52;
  AuthenticationInfo authentication_info = 53;
  int32 authorization_info = 54;
  int32 adversary_authorization_info = 55;
  PoiInfo poi_info = 56;
  repeated Image media_badge_image_list = 57;
  int32 adversary_user_status = 58;
  UserVIPInfo user_vip_info = 59;
  repeated string commerce_webcast_config_ids = 60;
  repeated Image badge_image_list_v2 = 61;
  IndustryCertification industry_certification = 62;
  string location_city = 63;
  FansGroupInfo fans_group_info = 64;
  string remark_name = 65;
  int32 mystery_man = 66;
  string web_rid = 67;
  string desensitized_nickname = 68;
  JAccreditInfo j_accredit_info = 69;
  Subscribe subscribe = 70;
  bool is_anonymous = 71;
  int32 consume_diamond_level = 72;
  string webcast_uid = 73;
  ProfileStyleParams profile_style_params = 74;
  UserDressInfo user_dress_info = 75;
  BizRelation biz_relation = 76;
  MemberEntranceInfo member_entrance_info = 77;
  PublicAreaBadgeInfo public_area_badge_info = 78;
  ExtraInfo extra_info = 79;
  bool allow_be_located = 1001;
  bool allow_find_by_contacts = 1002;
  bool allow_others_download_video = 1003;
  bool allow_others_download_when_sharing_video = 1004;
  bool allow_share_show_profile = 1005;
  bool allow_show_in_gossip = 1006;
  bool allow_show_my_action = 1007;
  bool allow_strange_comment = 1008;
  bool allow_unfollower_comment = 1009;
  bool allow_use_linkmic = 1010;
  AnchorLevel anchor_level = 1011;
  Image avatar_jpg = 1012;
  string bg_img_url = 1013;
  string birthday_description = 1014;
  bool birthday_valid = 1015;
  int32 block_status = 1016;
  int32 comment_restrict = 1017;
  string constellation = 1018;
  int32 disable_ichat = 1019;
  string enable_ichat_img = 1020;
  int32 exp = 1021;
  string fan_ticket_count = 1022;
  bool fold_stranger_chat = 1023;
  string follow_status = 1024;
  bool hotsoon_verified = 1025;
  string hotsoon_verified_reason = 1026;
  int32 ichat_restrict_type = 1027;
  string id_str = 1028;
  bool is_follower = 1029;
  bool is_following = 1030;
  bool need_profile_guide = 1031;
  string pay_scores = 1032;
  bool push_comment_status = 1033;
  bool push_digg = 1034;
  bool push_follow = 1035;
  bool push_friend_action = 1036;
  bool push_ichat = 1037;
  bool push_status = 1038;
  bool push_video_post = 1039;
  bool push_video_recommend = 1040;
  UserStats stats = 1041;
  bool verified_mobile = 1042;
  string verified_reason = 1043;
  bool with_car_management_permission = 1044;
  int32 age_range = 1045;
  string watch_duration_month = 1046;
}

message FollowInfo {
  string following_count = 1;
  string follower_count = 2;
  string follow_status = 3;
  string push_status = 4;
  string remark_name = 5;
  string follower_count_str = 6;
  string following_count_str = 7;
  bool invalid_follow_status = 8;
}

message PayGrade {
  string total_diamond_count = 1;
  Image diamond_icon = 2;
  string name = 3;
  Image icon = 4;
  string next_name = 5;
  string level = 6;
  Image next_icon = 7;
  string next_diamond = 8;
  string now_diamond = 9;
  string this_grade_min_diamond = 10;
  string this_grade_max_diamond = 11;
  string pay_diamond_bak = 12;
  string grade_describe = 13;
  repeated GradeIcon grade_icon_list = 14;
  string screen_chat_type = 15;
  Image im_icon = 16;
  Image im_icon_with_level = 17;
  Image live_icon = 18;
  Image new_im_icon_with_level = 19;
  Image new_live_icon = 20;
  string upgrade_need_consume = 21;
  string next_privileges = 22;
  Image background = 23;
  Image background_back = 24;
  string score = 25;
  GradeBuffInfo buff_info = 26;
  bool grade_describe_shining = 27;
  string grade_banner = 1001;
  Image profile_dialog_bg = 1002;
  Image profile_dialog_bg_back = 1003;
}

message GradeIcon {
  Image icon = 1;
  string icon_diamond = 2;
  string level = 3;
  string level_str = 4;
}

message FansClub {
  FansClubData data = 1;
  map<int32, FansClubData> prefer_data = 2;
}

message FansClubData {
  string club_name = 1;
  int32 level = 2;
  int32 user_fans_club_status = 3;
  UserBadge badge = 4;
  repeated int64 available_gift_ids = 5;
  int64 anchor_id = 6;
  int32 badge_type = 7;

  message UserBadge {
    map<int32, Image> icons = 1;
    string title = 2;
  }
}

message Border {
  Image icon = 1;
  string level = 2;
  Image thumb_icon = 3;
  string dress_id = 4;
}

message UserAttr {
  bool is_muted = 1;
  bool is_admin = 2;
  bool is_super_admin = 3;
  repeated int32 admin_privileges = 4;
}

message OwnRoom {
  repeated string room_ids = 1;
  repeated string room_ids_str = 2;
  repeated int32 room_ids_display = 3;
}

message AnchorInfo {
  string level = 1;
}

message AnchorLevel {
  string level = 1;
  string experience = 2;
  string lowest_experience_this_level = 3;
  string highest_experience_this_level = 4;
  string task_start_experience = 5;
  string task_start_time = 6;
  string task_decrease_experience = 7;
  string task_target_experience = 8;
  string task_end_time = 9;
  Image profile_dialog_bg = 10;
  Image profile_dialog_bg_back = 11;
  Image stage_level = 12;
  Image small_icon = 13;
}

message AuthorStats {
  string video_total_count = 1;
  string video_total_play_count = 2;
  string video_total_share_count = 3;
  string video_total_series_count = 4;
  string variety_show_play_count = 5;
  string video_total_favorite_count = 6;
}

message XiguaParams {
  string user_auth_info = 1;
  string ugc_publish_media_id = 2;
  string media_id = 3;
  string author_desc = 4;
  string description = 5;
  bool user_verified = 6;
  UserExtendInfo user_extend_info = 7;
  string xigua_uid = 8;
  string nick_name = 9;
  Image avatar_thumb = 10;
  Image avatar_medium = 11;
  Image avatar_large = 12;
}

message UserExtendInfo {
  string share_url = 1;
  string r_schema_url = 2;
  RocketSchema rocket_schema_info = 3;
}

message RocketSchema {
  string r_schema = 1;
  string r_token = 2;
  string download_url = 3;
}

message ActivityInfo {
  Image Badge = 1;
  Image StoryTag = 2;
}

message NobleLevelInfo {
  Image noble_background = 1;
  string noble_level = 2;
  Image noble_icon = 3;
  string noble_name = 4;
  string expire_time = 5;
  Image noble_big_icon = 6;
  Image noble_icon_with_back = 7;
  Image noble_boarder = 8;
  repeated string noble_background_color = 9;
}

message BrotherhoodInfo {
  string name = 1;
  string level = 2;
  Image background = 3;
  string font_color = 4;
}

message AuthenticationInfo {
  string custom_verify = 1;
  string enterprise_verify_reason = 2;
  Image authentication_badge = 3;
  repeated int32 level_list = 4;
  AccountTypeInfo account_type_info = 10;
}

message AccountTypeInfo {
  map<int64, bool> account_type_map = 1;
}

message PoiInfo {
  bool is_poi_enabled = 1;
  string poi_id = 2;
  string poi_name = 3;
  string poi_id_str = 4;
  string follower_count_permission = 5;
  string white_user_permission = 6;
}

message FansGroupInfo {
  string list_fans_group_url = 1;
}

message JAccreditInfo {
  int32 JAccreditBasic = 1;
  int32 JAccreditAdvance = 2;
  int32 JAccreditContent = 3;
  int32 JAccreditLive = 4;
}

message Subscribe {
  bool is_member = 1;
  string level = 2;
  string identity_type = 3;
  string buy_type = 4;
  string open = 5;
}

message ProfileStyleParams {
  string profile_style = 1;
  string smart_switch = 2;
}

message UserDressInfo {
  repeated string dress_wear_ids = 1;
  repeated string dress_own_ids = 2;
}

message BizRelation {
  bool shop_fans_club_reverse = 1;
}

message PublicAreaBadgeInfo {
  map<int64, Image> badge_info_map = 1;
  repeated string badge_list = 2;
  repeated WebcastDslBadgeList webcast_dsl_badge_list = 3;
}

message WebcastDslBadgeList {
  repeated string badge_list = 1;
  DslRule target_dsl_rule = 2;
  DslRule filter_dsl_rule = 3;
}

message DslRule {
  repeated string app_id = 1;
  repeated string version_code = 2;
  map<string, string> ab_params = 3;
}

message ExtraInfo {
  bool is_contract = 1;
}

message UserStats {
  string id = 1;
  string id_str = 2;
  string following_count = 3;
  string follower_count = 4;
  string record_count = 5;
  string total_duration = 6;
  string daily_fan_ticket_count = 7;
  string daily_income = 8;
  string item_count = 9;
  string favorite_item_count = 10;
  string diamond_count = 11;
  string diamond_consumed_count = 12;
  string tuwen_item_count = 13;
}

message GradeBuffInfo {
  string buff_level = 1;
  int32 status = 2;
  string end_time = 3;
  map<int64, int64> stats_info = 4;
  Image buff_badge = 5;
}

message MemberEntranceInfo {
  int64 type = 1;
  bool show_entrance = 2;
  string schema = 3;
  Image single_entrance_icon = 4;
  Image double_entrance_icon = 5;
  bool is_member = 6;
}

message Image {
  repeated string urlList = 1;
  string uri = 2;
  int64 height = 3;
  int64 width = 4;
  string avg_color = 5;
  int32 image_type = 6;
  string open_web_url = 7;
  ImageContent content = 8;
  bool is_animated = 9;
  NinePatchSetting flex_setting_list = 10;
  NinePatchSetting text_setting_list = 11;
}

message NinePatchSetting {
  repeated string settingList = 1;
}

message ImageContent {
  string name = 1;
  string font_color = 2;
  int64 level = 3;
  string alternative_text = 4;
}

message PushFrame {
  int64 seqId = 1;
  int64 logId = 2;
  int64 service = 3;
  int64 method = 4;
  repeated HeadersList headersList = 5;
  string payloadEncoding = 6;
  string payloadType = 7;
  bytes payload = 8;
  string LodIDNew = 9;
}

message kk {
  int32 k=14;
}

message SendMessageBody {
  string conversationId = 1;
  int32 conversationType = 2;
  int64 conversationShortId = 3;
  string content = 4;
  repeated ExtList ext = 5;
  int32 messageType = 6;
  string ticket = 7;
  string clientMessageId = 8;
}

message ExtList {
  string key = 1;
  string value = 2;
}

message Rsp{
  int32 a = 1;
  int32 b = 2;
  int32 c = 3;
  string d = 4;
  int32 e = 5;
  message F {
  int64 q1 = 1;
  int64 q3 = 3;
  string q4 = 4;
  int64 q5 = 5;
  }
  F f = 6;
  string g = 7;
  int64 h = 10;
  int64 i = 11;
  int64 j = 13;
}

message PreMessage {
  int32 cmd = 1;
  int32 sequenceId = 2;
  string sdkVersion = 3;
  string token = 4;
  int32 refer = 5;
  int32 inboxType = 6;
  string buildNumber = 7;
  SendMessageBody sendMessageBody = 8;
  string aa = 9;
  string devicePlatform = 11;
  repeated HeadersList headers = 15;
  int32 authType = 18;
  string biz = 21;
  string access = 22;
}

message HeadersList {
  string key = 1;
  string value = 2;
}

enum CommentTypeTag {
  COMMENTTYPETAGUNKNOWN = 0;
  COMMENTTYPETAGSTAR = 1;
}